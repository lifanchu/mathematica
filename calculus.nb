(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    287469,       5527]
NotebookOptionsPosition[    281317,       5416]
NotebookOutlinePosition[    281844,       5435]
CellTagsIndexPosition[    281801,       5432]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Calculus", "Title",
 CellChangeTimes->{{3.8182287811452255`*^9, 
  3.818228782145225*^9}},ExpressionUUID->"d5e863e0-64d0-4539-ad2b-\
e0dcbd72ac07"],

Cell["\<\

To do / notes for self:
\t- Using graphs to improve intuition
\t- Faster function input / chaining\
\>", "Text",
 CellChangeTimes->{{3.818229052710688*^9, 3.818229105278764*^9}, {
  3.818229267465946*^9, 3.818229275211462*^9}, {3.818236002744293*^9, 
  3.8182360116102943`*^9}, {3.8184124343442044`*^9, 
  3.8184124382482014`*^9}},ExpressionUUID->"05191c93-ede6-4335-aea6-\
c3b156fe306b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], "+", 
   RowBox[{"2", " ", "x"}], "+", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8184128352876973`*^9, 3.8184128352886963`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"93eb3686-7f00-4992-b1d5-4e6c6d334311"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}], "2"]], "Output",
 CellChangeTimes->{3.818412836056755*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"05669361-ff50-49fa-b5b8-bbb4fe4b8f11"]
}, Open  ]],

Cell[CellGroupData[{

Cell["General fluency", "Section",
 CellChangeTimes->{{3.8184125237672462`*^9, 
  3.818412530488577*^9}},ExpressionUUID->"894a4507-0f5c-43e9-9771-\
42672406c4de"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Use plots", "Subsection"]], "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8184125340485926`*^9, 3.8184125635261755`*^9}, {
   3.8184127260893126`*^9, 3.8184127270100555`*^9}, 
   3.818452434591955*^9},ExpressionUUID->"dc6010f0-77c3-40bd-9219-\
de27d0716889"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"x", "^", "2"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "6."}], ",", " ", "6."}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.818412689494442*^9, 3.818412713712083*^9}, 
   3.818452434591955*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"33453e2d-6408-4467-8411-2608362a4960"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$6627#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{370.833333333338, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-6., 6.}, {-4.843841354905413, 3.5835188568234555`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.818412687192442*^9, 3.8184127139699965`*^9}, 
   3.818452434591955*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"56bd7616-f038-4538-8986-4101024b625d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"#", ",", " ", "x"}], "]"}], "&"}], ",", " ", 
    RowBox[{
     SuperscriptBox["x", "5"], "-", 
     RowBox[{"10", 
      SuperscriptBox["x", "3"]}]}], ",", " ", "3"}], "]"}], "//", " ", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "50"}], ",", " ", "50"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}], 
   "&"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.818413088863778*^9, 3.8184131598606443`*^9}, {
   3.818413196915399*^9, 3.8184132297559834`*^9}, 3.818452434591955*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"9827383e-1fdf-445d-ab3c-21660be102db"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
FN44ZrEnR7th/wOmlGMP
          "]]}, Annotation[#, "Charting`Private`Tag$14056#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$14056#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt2Xc014/3B3B7h5C9985IyHjf15uslIb6EAlZUUZJSEJCVkgiJUJpGBUt
6n3fpWQkCpWVZIXs8bZ//c75/nXP45x7/7t/3Oe5Mu4B+z0Z6OjoPtDT0f1/
dXb7NbGxYYXc623fZ7nMqD9FnWf4Vq3QyN5+ZonRjOre1jGvQLPCwH0NPQwr
ZKqPZdPqrikrTLrQpizxh0w9rfGcI7vPCjNdl2JOvydTE5eSFbWoVvh4iDxw
N5JMfZlu4OIaY4W3E96CwixBFXx75RMyWeEbu7407wGgWpr+iDw6Z4GOUaOV
9yJMqCJ7Flk5F3aiz4nymtBWQ6pycHTN01VzzHvmbVYUv51aVnXXbMeEGbK+
7jV5b6NLbU/Mv/NpmozxFyTI6Wla1NPn9NpM+wg8PP7aMP2rGnVPzHbt0q+A
wa09qa91laiZhsJNe5+Q8LZvnme3qxw1rHipk+GqCU5fHS8rOCtFzTeIzWm+
boSpR/rv2CWJUMm0obLMu4YYLG63jytGgPpl4sJxwSR9DJsX054v56FaLyp/
M7ioj52kUB7pNB4qbrSaO53Tx9eCL4xdA3mo5bzy0vl++mhGPuotrc1DTdb5
2KFiq4+uYVV6t59yUy1CeM1NNulj1eOWsLSaTdTqtXxJjyvb8VK28SueXk5q
Edfbr4+v6uGpRzWT00fYqIt/N7aqJemh7W3fjmVgo9p8NkkuitHDuHOUUlF5
NupU+kvz60F6OBO+ieP2KCvVWOhxVYSdHhq6sZ57GcpKbZPJv27JqYdHlX/Y
auSwUJn0I516YrbhVLySXOsoE/WY247fbKd00fMdy7ZNn+mpPoVflR8c18WD
G5OFtOf01BODJ/x3ueli+KW+jcV8emrI8dtLKXt1kenJOUed0/TUxCAmXv6t
uvj7kHBhpjA99Ul0s7HEuA5yK/3gZPOmo9Ldcc/S9tLBU3rfFLrl1/FWf6L1
4cPaqL/j6+BD8hKa1vfPJ+3XxpTwemZf6SXsK99x57WNNnrN8fFZrtNQ/vzo
srSRNjYc6n9+5BUNHwnZPBoW08bbChZPVnRpWGPLznOmRwtFvGq0JtQXsetZ
fNsVVy1ksdSv36U3jxG3fkZRHbSQ8mH0dJPgPErG6mvM7tXCqHTW3b60OXTf
N3zpEKGFRg2U/WvVczg6ZqEvIauFv4XWFS6Yz+EcwbXtYN1WLMyzfTV4eBZ1
BdkpiZ80MUuTmafn5jRqXuufy63RxIK1XbSCC9OoKlCjWvpQE4/+uqoU7z6N
0nwBWZ8va6JQD9vmJ8rTyM3dflLAQhPvu1ZJJDybwhHmAvG8NxpY2c8ltati
EvPmDcIfl6vjH8ZJ3O85jjnBfBVv89TxnUWJ5n2dccycHRv8mqKO2VsuPjOi
G8ek6bx9C37qmGnmFidwcwxD/zKpGCmrI91/YmbpHaN4YLDlW22+GtI2ufNn
H/qDbO0+et/TVVF0j5Bif/QQmt6iGHDEqOKTB9lvHR2H8LSnoLHxKVU0URft
pdcewt75d+T8/aqos+OM5O++QXwqKLXXh18Vz76fujFEHkQXh3ZfWqYKpr9Q
2v6dZwAru4h84WxlnGAfSs1t+oWjhdmFNgnKuO9qF/PY/V8odWLybkSoMl6W
SXXxjv+Fias3S/sclDFkJJoYIv/CoxK0VyUiyqjkwV60VN2HHEfL2g1ylVDM
I1ai+sRPdO0X5XTMU8QbhIPy7awu3O2cO2aQoojB+ZAm/18X7ugQaxKOUEQV
saJODuEu5G8QT/nuqIhfAtOnaDc68cNjSR6HLYqovUATOFD8AzWiZfn/S1bA
61pZP980fsNlKVWxg+HyeDH/Z2jQkTYcznmwsu24PO6501MYq9KGbfxq3QIO
8nhDYSNycv4rlrKq32rTk8fjr92kGq98RddJDSn7aTkcTMxeTa/7gnVvtOUO
+Mhhi4f3RwnLVsw8Yqi275AsjhSg+UG2TziQHdgbtVMWGeZbdZueNaFe2730
im2ymKhLC+n0bMIOG0EaD78s3h+PbHr1vhFFDGZrmz/LIG/RwbBzyQ2Yx1fq
Ymstg2LNqvQX9T7i5O6BzREGMtgjyTim8bcO4bLY+4dKMniU3BvsXVyHvzYu
q3GyyODpc9lGsUJ1KP/Xi1b/VhqbOdYcDzJ8wPt10hmWxtI4aH6Zvnv6HS4z
OOw8qyaND9lYi7c+eYc2pldod0WlMTbuzDb20+/w2/GV11wzUrhfVXp018Jb
dDav+i/RTwplvZPP0DG+Re8l5aRLLpK4y/md7qNtiBHHeGfOmYsjtkVxXhh9
iRknwmbFFcTxRmrA8ETaS7x3pn/uNbM4Jt89fUfF4CV+ia9c3PgghvHRRhqr
CS9Q6ZHD2kVrMVT7YdG5qvscv8zlsyXvEUXTV7rP7pZV4sgaO4fGVlFstPWL
PexWiWsspzmbeUTxYtQznkaBSlQW2cnN2yqChDNre+/5pxhp8oc/84AI2nby
HH3h8ARV4rSlbjoI463cwsyTWhVoeuWGtImhMDIH8vqy9JSjfTajbK+IMO4P
WutLPVyOkQ/a5aW7hPDvBOFa4ViGbc1hqkVHhJCF6q/B5PMIo4Te6j1yF8Tb
gko2x96VYJa0mv5uM0E8/Z5vMsW+BB+qZBpMyAniyFvJuKWhe9hh5GWkNbgF
rRuzwpJ57qGaKwdR6b0Fb67SbQQEFGNHyX7bmhMCmKef0ljgcwcPb+Fhe2kj
gDHSOy1cmO9gb3TjuyplAaRPOpx/qrAAhw+bG5UP8GP8j03TOb/zkca1XfWO
Mz+qitvOWg7nYUTYzGDeDn6U8X36EfXykG6orCBXmB/tU68deh93C9kpSiLX
2viQwexB9lGtmygaJMKWYMuHTLgt/3BBDub1tL+LVeXDbNkMuaeMOShrk3Eh
mo0PQzVVHU/7ZKOaHOdieO1mLFYb/SZseB2N21cHTxpvRmfJ+k3hC5noYtj3
7oA6L35YXntY1JOG/cU3L+zl4MUJO7N5J480/CT/JORGCw+uj1z66Nl5BXs7
Cj1TrHjwreodVyeOVKQzijc7bcCNldpp7Y9zE5FNgK76xNwmnLq+fl2y4TJu
/huq41WxCcXN3HJiVhNQ9ravjKPyJrQyeref62Q87mTcs2EqzIWeoQbBqhGx
uKf7Q4hBGycGN8YzHKy/iIeqSBPaaZyYxL7rnaboRfTx1u6RZ+PEUZG/7Y0f
ojGxUaCag8aOUQU1Sq7XIjGjKEWHqZId2S4KCVT4nMfc8ywP1gLYsT/O0baZ
HIGPttKyp4bZMCuXL1ODMxybr3aFdHxjxZGLHcoXRs8gJd1a/kA2K0rzHk5O
ZTiDFVeet352YMWWnDh1XulgTE+6ql7/gwU1OH9EbvU7hfYXd/VXdzGjjFNF
b3yUP+6MfnnF4CYzsndqhV5jOonbLyiZVDkz4/nR1eWbGX4odI4xu6yHCfck
BQfLN/lg56nq3QU/GXHBqdG07/ExbAxUWZHIZ8RTC+mqCTHuWON/veSGKyMK
v7wVQHJ2w1u+pxkzfzFgDBPjuU/2Lpjq86uC9w4DdnaXmxuYOGOkl51LijsD
at7s0/q2/TC6uqu9jPtNj2ledX0fnA/hPtccL8YiehwwDne+k2CPZBdWgSgP
euxOe+BbV7sf5Q7/9g8bpMOatGVn1s492Fi43fp78wbFXjmiruovGR/d5itq
tdugkMePsuiYAKbmTqw3tKxTxLls7DUPGOHeq3crX39Zowy0JNOllmmjzpUY
nucH1ijfJYMSb7qoIn+Si29F2yrFp0RU6USTDHbECEoXdqxQojzYC4nDE5QX
kTPhN/9bocDDGZOzDcyQE97cfu37MiXNXtC2oVEYwkMeaF1xXKb0vYpnZ12Q
BedTcUkJnUsUra0bOd/lVcDU330o2mmJQnc4clFzThOkfE2Jc900ChMre8Gk
jg70uy0snOxdpNhrHuRpFdOH2iNf9nkfXaTs2eMRWr7bEIodyx659i1QnB2E
hD3tjSDuYCLrYbcFSltVcGS3lgn47PNyP9A/T2FriTGiGzAFm93k17bH5ika
bEUBR/QB1KwlhS0G5iiCgYMRKyMAXDuXT5E85yh+bQkpdvEETEDHJ4OhWcqP
4+l/mvnI0GL8RFnHe5bC68nwYyKJDI8NUi+qjcxQXi/3FsrPkiFjm2+v/PEZ
SspR1YxBKzMI1rIwlBydpmh+HB67m2IGh9RlM4X8pil7j4su9VDNQF95fYJ3
fIqSd/Y9Pd2QGQjLd1pznJyi1CuN745ZNoNZ0glr1u5JSmRZukLnhhnM7U5T
XeyfoDz4KeTxeeGfnSo5h//8peR9rvLg7fvn49/HO6bGKV4hivc5a/757Oqn
D4tjlE1N8k+3Jv3zJenyZ+ujlPyPfkxju81g/qp52l3mUYqqxzPJR0xmsFDg
E5TF9YfyIoty8Vc5GRbKk/fH8Y9QDjmQq5bs/vl1hW6I6DCFu2Bp27FBAhYb
2wS8ZIYoEz75scmBBNB+0OYPKg9S6EumFQamAWjD4t92bh2g2B8qufH9+D/P
wwu97b8pA9/WP1Y8JsESo2eOgkk/pYV6jKMo0hSWpUqdmHf1UfgyVIp+jBjB
vNOdsNHCXkqOQwhjR/wOWDg7atTwuJuimbdPcoeIIdDKw/Hyp++U315JmaWC
22FVKreejbmVouM+UNelvBW06PD1SbhOOdQ55hTUOE9i2qCFOMRdID0f36ho
Sumh/CDlrTZFF5LGfteTT1gy4CCJ+8TIvpck5ZYU3aUSIRwjfZBbMGwivdWS
qYpnU8V5xlw7MZ4WkpNEzMHkcA2cG96fYkT/hVR60f6EcoAWzpS/ZYsYbCcd
u99UJfxKFydIdzZWS3tI/AVi9BFthvhX7rCJRP5P0qGG8+f2GRvhAuPl15L1
faSUoKuNklnGuDAMK6bV/aSQMPqf6uIkXPghLmpX+Zu0uvrsk6Mc4HwjzeBo
6QCJWbyL52c54Fx5RciF20MkC0F6w/lHBM4VJF+7kj1M8qRPEb8vTsbZqz6V
t9NHSBJjoj0D0WScuWT+tTzxD8mja5Jm2P3PZ6VnKBdHSeqdeycM1cxw5vgq
b0vEGMl3MsYoxN8Mp52+b+07M07ik2t0iSo2w6ndlXum/P+ShM/7d/z5/M+k
tJN0PhOkQOYn0uZ/zTBUsPWlTsgkKV/oVEPHmhlGLbBd1CFPkajl5lUr/1zr
pnJ/V/0U6TlrXb3Cv372T9afPfZOkzwcs6bqGsxwj4Hv/Plv06QnvXZ8B7PM
MKMwUey6ywwptjVNCOzMsIP7IVExOENCv4WRlTkyioY3etefmCVZDEsErMSR
0WVwLKV/dpbEEFmU8ZiJjIV7uSpXwudIbceVjNNPEjhSrd4pwDBPKhows99E
BVRX2k2neXmeVLJXM157jYSBGScVLXkXSDd7IgZtd5li5VqKrev1BdLI79LM
/X7GSPMpOxUmuUiy/7biqey8A03amrMzihdJJWoFqpXiBhhDmnzzUJ1GqrD/
/rTroR5+eMAzWPuURjL/0PUllk0XOQS1OHt3LJGE5wYdrmlr4Z7ovdqL1H8u
ctcc2qWKGeOB//FaL5Mq7k29Zq2Xw2//pZ9XaVkmSVe1Mz+rEEFXzS/1Tr0r
JLpcc6uOHzOkopyZyWDPVRJdg7CqyM4tMMLEL5g6/s/HW2QiXeUgqOuAOy6v
kWiV/UsJ8rrwzCI44Uf0OqltF0s4t7EBLD/OLJth2yBVqOdfs71qAkSt7/kM
TjooilQsLY0xh4GlcF4pOzr4GHNGSyvdEuK2JhU+zKCD/bUcR99RbaDhxsP6
WhF64E6u31Tyfi+caKl23neEHqy6FMYfZ+wHbpamyZ58ejjVPrqnN8ge9geN
b1lUYoC3h4JbXng7wNzd1ZKLfgzAVJTLMhd5GLK6uYx5yxnAV3l60u++M3RZ
arirbGeEIO0Q5qybruAh6V/mZM4EvYbv7b8UewKLfSQxEs8EDUo7XU0ZvKHk
cmpbcCMTRLyWmXM/7gPjc2XLKfuZ4eDdA03uDn5wpnHSAl1ZwHpcMSi5NxCE
6ek6bYtY4I2+rm/GyyB4tZ335I9hFtC61fIm+sYpWC/QujrjzwoSIoEsx/yD
IS406Kf8eTY4nyj2S8I1FOBysrFmDRs8O3DrscnhMFjOuZejv8IGZ3IizNcc
w8G/uueATRg72BtsYrnmGwGH1q0/BpzhABr7e/lunyjg5fFUCKvkgKEEZoru
WhQ0SEXFxMxywM9jmlcyM6PBlHhmfC2IE1pWr51LbYoBhVjZx69OckGXu4WG
uvsl6M004a59xAXmvgeksnjiILvYwe/TGBdE+jHcJGMccNWlKvQd3wRmqoU/
L6glwBz7Sg6zFzcYEmEG9qpJ0F93nFDeygt6Se6v2obTgLR3cfLRHl64uzrC
aHs4HW5+j83T9ueFD2zhw7ea0+HQn9srO0p5IdxhtPVnTQY0cHRU7VbbDF33
rRKgIhOe7CarnlbiA70qWYns+Wzg6fj8fdGCD15MvWXwjs+BEy5H4iO8+KDU
Q+mbtdgNUAwIHbhUzAdHjvgVOFrnwo20srxsOX6Y8pTnZaHcgpivovxvpATA
8RVEdF4ugECaPeswIQCkq2NPvo8VgIvElRUeDwEIU/6loW13B3Z4Mw64lQjA
serdvMsihTC7PFbJrL0FasYyPdSwCDxkXx/aTRYE+WrJ7Zz7SmC/5aJNiIcg
ZLo7elHqSwBOaJNuxwmCe+Yxxxmz+yD+rFhpukEQChvi7/UYP4A261Ra5gEh
sB49S2UnHsHOoKM3uj2EIUTilp+TTQVsy8pJZY4Xht8fS4K3Xa0A2eqvMZr3
hSE230XyZ3cFrDNZ+UX9FQYN/5zfpacew7NsLWP5EBE49nxDbl/JE1BE+l6/
eFGoL9SaKTWuAjaeIpmV++IQuagVVLO5GjQfBwbGNopDLCdXndyZajh4wISy
6a84uOkE24X+qIY71zucpbUkAMWmrP4W1YCRNHv2zmcSEM1ftUXB8g34a/tz
p72VhJWiyuHeboTMrzuOiAxIwoVrtkPGglSoPsP66A6zFLS260qL7qUC26t8
6yorKThz9pS//XsqFJC/xnY2S8FQDintW9VbGFW5eT7jpDTMbst8n1ZeC2vh
DAr/RUqD9oy7gdx0LfA2+TSJXZGGgveXE0x034O+v55YcYU0POpz+8P58j3E
Pml+8XxWGm6QGz9KNn4ASSP6ue4wGbC7stZ5jb0e9tl6+SrFycI9oedaabOf
QNXezrzxmiwYsEYQl4hmYHI2kAwolgXROL2YjSvN8MyP48uzWlnIWPlx4JLm
ZxBNKjO0YJQDcrGIybRBCwzUL7B5RsnBjpbXp2Qvt0KIZfy9O+HysHN7jMcR
lzawswuMtkiUh+VLoVFCqW2g/J+j02iOPLwzf6En9qYNOr3UeHReysOFORNb
Oql2IMV9DqEuyoPs0Xgby4F2YHsvZNEXrAD8Z4yvLUV8g1xyyYBEgCLUmEU9
OjvSCTXZ3r/4oxShb0pAtlSxC3onFHvZ0xUhLcLGh/DsAtnc4m/zTxThwdNz
sfG/u6Bk9k7DpwVFyDLZ+il9oBueFd2qOB+pBCfv3VbpofXCF5arET0pymB2
yatM5tkvmHPeH/Y1Txk21TpU+Hf9AsGnm0Pqy5XhRoxKxiRdPzgeTQuoalUG
TsIhNsW2H/qep7inbFGB2s3xnKZD/TDhk2BlcksFNs5wjabJDQB743mBW49U
wW2wnpv2YQimvlHMTtWowqtrJ90Ep4bg+wD9acsmVRgPuNjgKTIMJeuXWqfH
VIF1v6199olhsNBJTbVQU4PwPCLYbssIxObksU3dV4Pq31oHpQL/wLo3ZZV8
Tx04wjsEN9uOw1Awvbrwc3XQe7N6OfHcODRHmzn9/aAOraUNVQYPx+FWbt3L
60PqkEMqeqjL+ReMP38OGVfQgNZ1Y9N7n/5C2Pa+qWtFGiB99px/nvMkzDHR
D44UaMJv+0Cjpn3TELo3mfB/rAm15peTvE9Mw2quUN4saoLKubOTEvHTwKSr
+d/6T81/+5ut0l0zDfxuTvX8klvBNsF+6LbKDOi8rio1vbEVlmy/ROxlm4UX
O/SMbKy1IHaZdbGqcw7C+8L/cO3TgjmjvdbNtDkwjsPrnx204GHYdU9GoXnA
1l1z9j5acEN6RKf2wDzU+biXHo3Xgqu5C7cLmuehI+uK1Jn3WmBhOv7mW/0C
zM/8YcwntIFnyfFPWgcNuik33nHaaENDsdEL0xUavE3edfHsfm146Kp0ild6
CVIVSxnsjmmDkpzQXynfJVA8HEi/HqsNlQ2af6Y2lsCBurDu9FEb6mQWrHx1
VqDmCuOykJ0OvO7OF9d7ugYx6hJTV5x14c+CrNvGVXqi0Z7H2s9DF0pdhduS
7tMTAufp71ic0IXj/iItKhR64t6nwQNr53TBOfj+hRuj9ESTf9lz31xd6JKa
uGhHZiC2PCZd2NmpC3cLgxy45xmIEj137pX/toF8a944rw8T0Wx6T93rgB7I
O57PfX6JlTBOZbo+6qQHW7ln+jbfYSXu97jRB3jowTvs+x7zhpWIjRDvOHtG
D25vdWW6v8hK7HiVfuHydT1Yf3DAktWPjbirF/HlUZceXGgJ9OE/xE6cV98X
OntsO1zKKjh134STUBddeRcVrA8z3I0X6ux5iNXanLrgCH1QuMVk9TmYh/gU
YNDoE6sPWYuyX8czeQj/92e+7M3Uh2TGBLvj7TxEReBUn3SlPoglF/1XqcZL
6NYNruGsPoiIP3jzrpyX2BHcok9/2gD0Dc4FG+Nmwqq5+GF0kCFwfGtvO8Yo
QPw5GGqc4GEEi5c/HU1fEyZu3hVQ/hr9L5jPbgt+D1IEdwurB9M5EtDOVSj/
XZElrNzc14w/A8i9OrjJRUaJsK21v7XcRYCSfUtAAUWNKL96yvNhBxku1gl+
r7DWInIt5w9H/suRWwq9LPdt0yWGvAtDzQfMobqCE/UNtxNzQYO+m3p2QqLb
YntBmCGR5JqcSBu1AL20hLUgBxMiutrlS8eQJRR4b+QkFgMh/KElxGjMEvIK
FlRqyoCoaCGL5U9aghdPuNj0cyB6BxU9jtMsQdmvQMGzAQhj3sn5FXYrCPVs
Hz4zCQTN44KIjIYVVAaPl+3YQRD+3PmufqetoCzsXv7BLwTBIsLH3HLW6t+d
qJw110UQt+Ri72+LsIKNcX7664ME0WTgM7MWawUh5fcNh2gEoXpMKzYtywpy
rLQsy6TIxOBzvFf10gpMut65DJ4kExFvdWxF31iBcX/kfPVZMiHwqWgq8q0V
bP+WyZkVTSbI/QmGVo1W8Dtg9wv7a2Qin2tfY2e3Fejk2Sus1pAJA6F3AaRf
VvDrkM3HiQ9k4rOMnkDR4L/5uozJgRYysb5d5MjJCSt49fT6p64BMpFFJNF/
mbGCQ7IZl7onyISG7Vrx9kUrCNJwqu2jkYnaQwE2uStWYNWcnjjCYEb8758I
//snEv8Hb2LpmA==
          "]]}, Annotation[#, "Charting`Private`Tag$14056#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8P/1EPg/D/kfPSZHNg==
          "]]}, Annotation[#, "Charting`Private`Tag$14056#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-50, 50}, {-6.052996883270231*^6, 9.708664674969068*^6}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{
           RowBox[{"-", "10"}], " ", 
           SuperscriptBox[
            TagBox["x", HoldForm], "3"]}], "+", 
         SuperscriptBox[
          TagBox["x", HoldForm], "5"]}], 
       RowBox[{
         RowBox[{
           RowBox[{"-", "30"}], " ", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "+", 
         RowBox[{"5", " ", 
           SuperscriptBox[
            TagBox["x", HoldForm], "4"]}]}], 
       RowBox[{
         RowBox[{
           RowBox[{"-", "60"}], " ", 
           TagBox["x", HoldForm]}], "+", 
         RowBox[{"20", " ", 
           SuperscriptBox[
            TagBox["x", HoldForm], "3"]}]}], 
       RowBox[{
         RowBox[{"-", "60"}], "+", 
         RowBox[{"60", " ", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.818413131101655*^9, 3.818413160211746*^9}, {
   3.818413197505801*^9, 3.8184132306389923`*^9}, 3.818452434591955*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"dcb5f598-627f-4964-b1aa-c241ae78087f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Use natural language input", "Subsection",
 CellChangeTimes->{{3.8184127342507334`*^9, 
  3.818412738091669*^9}},ExpressionUUID->"1109e405-b07f-4096-8335-\
2be6be36141d"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "probability of full house", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Properties", "Properties", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}, 
      "ExtrusionOpen" -> False}}, Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods"}, Typeset`pod1$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               FormBox[
                TagBox[
                 GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"poker hand\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    StyleBox["\"type\"", {
                    GrayLevel[0.6]}], "\"full house\""}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  ColumnsEqual -> False, RowsEqual -> False, 
                  GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                  AllowScriptLevelChange -> False], 
                 $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                TraditionalForm], TraditionalForm, Editable -> True], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "DescriptionOfANamedPokerHand", 
     "numsubpods" -> "1", "position" -> "200", "scanner" -> "PlayingCard", 
     "title" -> "Description"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
            "\"three matching cards of one rank and two matching cards of \
another rank\"", {
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "ExampleOfA 5\[Hyphen]cardHand", 
     "numsubpods" -> "1", "position" -> "300", "scanner" -> "PlayingCard", 
     "title" -> "Example of a 5-card full house"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TemplateBox[{0.1}, "Spacer1"], 
              FrameBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"5\"", 
                    GrayLevel[0], 22, Bold, StripOnInput -> False]}, {
                   StyleBox["\"\[ClubSuit]\"", 
                    GrayLevel[0], 28, Bold, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                 DefaultBaseStyle -> "Column", 
                 GridBoxItemSize -> {
                  "Columns" -> {{3.2}}, "Rows" -> {{1.8}}}], "Column"], 
               FrameStyle -> GrayLevel[0.5], RoundingRadius -> 5, 
               StripOnInput -> False], 
              FrameBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"5\"", 
                    GrayLevel[0], 22, Bold, StripOnInput -> False]}, {
                   StyleBox["\"\[SpadeSuit]\"", 
                    GrayLevel[0], 28, Bold, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                 DefaultBaseStyle -> "Column", 
                 GridBoxItemSize -> {
                  "Columns" -> {{3.2}}, "Rows" -> {{1.8}}}], "Column"], 
               FrameStyle -> GrayLevel[0.5], RoundingRadius -> 5, 
               StripOnInput -> False], 
              FrameBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"5\"", 
                    RGBColor[1, 0, 0], 22, Bold, StripOnInput -> False]}, {
                   StyleBox["\"\[HeartSuit]\"", 
                    RGBColor[1, 0, 0], 28, Bold, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                 DefaultBaseStyle -> "Column", 
                 GridBoxItemSize -> {
                  "Columns" -> {{3.2}}, "Rows" -> {{1.8}}}], "Column"], 
               FrameStyle -> GrayLevel[0.5], RoundingRadius -> 5, 
               StripOnInput -> False], 
              FrameBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"8\"", 
                    RGBColor[1, 0, 0], 22, Bold, StripOnInput -> False]}, {
                   StyleBox["\"\[HeartSuit]\"", 
                    RGBColor[1, 0, 0], 28, Bold, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                 DefaultBaseStyle -> "Column", 
                 GridBoxItemSize -> {
                  "Columns" -> {{3.2}}, "Rows" -> {{1.8}}}], "Column"], 
               FrameStyle -> GrayLevel[0.5], RoundingRadius -> 5, 
               StripOnInput -> False], 
              FrameBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"8\"", 
                    GrayLevel[0], 22, Bold, StripOnInput -> False]}, {
                   StyleBox["\"\[SpadeSuit]\"", 
                    GrayLevel[0], 28, Bold, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                 DefaultBaseStyle -> "Column", 
                 GridBoxItemSize -> {
                  "Columns" -> {{3.2}}, "Rows" -> {{1.8}}}], "Column"], 
               FrameStyle -> GrayLevel[0.5], RoundingRadius -> 5, 
               StripOnInput -> False]}, "RowWithSeparator"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Properties", "numsubpods" -> "1", 
     "position" -> "400", "primary" -> "true", "scanner" -> "PlayingCard", 
     "title" -> "Properties"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    PaneBox[
                    "\"\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                   TagBox[
                    PaneBox[
                    "\"number of possible hands\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                   TagBox[
                    PaneBox[
                    "\"approximate probability\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                   TagBox[
                    PaneBox[
                    "\"approximate chance\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]]}, {
                   TagBox[
                    PaneBox[
                    "\"5\[Hyphen]card hand\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                   TagBox["3744", Identity], 
                   TagBox["0.001441", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.001441", "SRString" -> "0.001441"]], 
                   TemplateBox[{
                    StyleBox["\" \[TildeTilde] \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["\" 1 in \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "694"}, "RowDefault"]}, {
                   TagBox[
                    PaneBox[
                    "\"7\[Hyphen]card hand\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                   TagBox["3473184", Identity], 
                   TagBox["0.02596", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.02596", "SRString" -> "0.02596"]], 
                   TemplateBox[{
                    StyleBox["\" \[TildeTilde] \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["\" 1 in \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "39"}, "RowDefault"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Left, Left, Left}, 
                   "Rows" -> {{Baseline}}, 
                   "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 
                    2} -> {Center, Baseline}, {1, 3} -> {Center, Baseline}, {
                    1, 4} -> {Center, Baseline}}}, AutoDelete -> False, 
                 GridBoxBackground -> {
                  "Columns" -> {None, None}, "Rows" -> {None, None}}, 
                 GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                 GrayLevel[0.84], BaselinePosition -> Automatic, 
                 AllowScriptLevelChange -> False], "Grid"], 
               LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
               False], 
              TagBox[
               GridBox[{{
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"assuming random selection from a standard \
52\[Hyphen]card deck\"", "\[NoBreak]", "\")\""}], {
                   FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"the value of a 7\[Hyphen]card hand is determined by \
its best 5\[Hyphen]card subset\"", "\[NoBreak]", "\")\""}], {
                   FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column",
                 GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  
                  ItemBox[#2, Alignment -> {Left, Inherited}, 
                   DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Left", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show derivations", "input" -> 
         "Properties__Show derivations"}, {}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> 
     "ComparisonsAmong5HyphenCardPokerHands", "numsubpods" -> "1", "position" -> 
     "500", "scanner" -> "PlayingCard", "title" -> 
     "Comparisons among 5-card poker hands"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    PaneBox[
                    "\"\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                   TagBox[
                    PaneBox[
                    "\"number\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                   TagBox[
                    PaneBox[
                    "\"approximate probability\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                   TagBox[
                    PaneBox[
                    "\"approximate chance\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]]}, {
                   TagBox[
                    PaneBox[
                    "\"hands of lesser value\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                   TagBox["2594552", Identity], 
                   TagBox["0.9983", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.9983", "SRString" -> "0.9983"]], 
                   TemplateBox[{
                    StyleBox["\" \[TildeTilde] \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["\" 1 in \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "1"}, "RowDefault"]}, {
                   TagBox[
                    PaneBox[
                    "\"hands of this type\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                   TagBox["3744", Identity], 
                   TagBox["0.001441", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.001441", "SRString" -> "0.001441"]], 
                   TemplateBox[{
                    StyleBox["\" \[TildeTilde] \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["\" 1 in \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "694"}, "RowDefault"]}, {
                   TagBox[
                    PaneBox[
                    "\"hands of greater value\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                   TagBox["664", Identity], 
                   TagBox[
                    RowBox[{"2.555", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "-4"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"2.555", "\[Times]", 
                    SuperscriptBox["10", "-4"]}], "SRString" -> 
                    "2.555 times 10 to the negative 4"], SyntaxForm -> 
                    CenterDot], 
                   TemplateBox[{
                    StyleBox["\" \[TildeTilde] \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["\" 1 in \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "3914"}, "RowDefault"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Left, Left, Left}, 
                   "Rows" -> {{Baseline}}, 
                   "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 
                    2} -> {Center, Baseline}, {1, 3} -> {Center, Baseline}, {
                    1, 4} -> {Center, Baseline}}}, AutoDelete -> False, 
                 GridBoxBackground -> {
                  "Columns" -> {None, None}, "Rows" -> {None, None}}, 
                 GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                 GrayLevel[0.84], BaselinePosition -> Automatic, 
                 AllowScriptLevelChange -> False], "Grid"], 
               LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
               False], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", 
                 "\"assuming random selection from a standard 52\[Hyphen]card \
deck\"", "\[NoBreak]", "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  
                  ItemBox[#2, Alignment -> {Left, Inherited}, 
                   DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Left", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "5", "datatypes" -> 
    "Probability", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "0.857", "parsetiming" -> "0.353", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSP36291fd9e52ff6h7d9b3000068ch0heb6c91b3i5", "host" -> 
    "https://www4c.wolframalpha.com", "server" -> "29", "related" -> 
    "https://www4c.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa36301fd9e52ff6h7d9b3000017c6fa2e5g74gbif6604077203588371163", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 9., 
    "Date" -> {2020, 12, 31, 23, 12, 40.7023636`9.362194509643505}, "Line" -> 
    7, "SessionID" -> 30914617378504020026}, Typeset`showpods$$ = {1, 2, 3, 4,
    5}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Properties", "Properties", 1, 1, "Content"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "probability of full house"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{257., {47., 27.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[7]:=",ExpressionUUID->"5e7d5201-e1f4-4761-b394-f70434d49923"],

Cell[BoxData[
 InterpretationBox[
  FrameBox[
   StyleBox[
    FormBox[
     TemplateBox[{
       StyleBox[
        StyleBox[
         GridBox[{{
            PaneBox[
            "\"\"", BaseStyle -> {{
               BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
               LineSpacing -> {0.9, 0, 1.5}, 
               LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
               Center}, BaselinePosition -> Baseline], 
            PaneBox[
            "\"number of possible hands\"", 
             BaseStyle -> {{
               BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
               LineSpacing -> {0.9, 0, 1.5}, 
               LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
               Center}, BaselinePosition -> Baseline], 
            PaneBox[
            "\"approximate probability\"", 
             BaseStyle -> {{
               BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
               LineSpacing -> {0.9, 0, 1.5}, 
               LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
               Center}, BaselinePosition -> Baseline], 
            PaneBox[
            "\"approximate chance\"", 
             BaseStyle -> {{
               BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
               LineSpacing -> {0.9, 0, 1.5}, 
               LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
               Center}, BaselinePosition -> Baseline]}, {
            PaneBox[
            "\"5\[Hyphen]card hand\"", 
             BaseStyle -> {{
               BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
               LineSpacing -> {0.9, 0, 1.5}, 
               LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
               Left}, BaselinePosition -> Baseline], "3744", "0.001441", 
            TemplateBox[{
              StyleBox["\" \[TildeTilde] \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              StyleBox["\" 1 in \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], "694"}, "RowDefault"]}, {
            PaneBox[
            "\"7\[Hyphen]card hand\"", 
             BaseStyle -> {{
               BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
               LineSpacing -> {0.9, 0, 1.5}, 
               LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
               Left}, BaselinePosition -> Baseline], "3473184", "0.02596", 
            TemplateBox[{
              StyleBox["\" \[TildeTilde] \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              StyleBox["\" 1 in \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], "39"}, "RowDefault"]}}, 
          GridBoxAlignment -> {
           "Columns" -> {Left, Left, Left, Left}, "Rows" -> {{Baseline}}, 
            "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 2} -> {
               Center, Baseline}, {1, 3} -> {Center, Baseline}, {1, 4} -> {
               Center, Baseline}}}, AutoDelete -> False, 
          GridBoxBackground -> {
           "Columns" -> {None, None}, "Rows" -> {None, None}}, 
          GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
          FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
          AllowScriptLevelChange -> False], "Grid"], 
        LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> False], 
       StyleBox[
        GridBox[{{
           StyleBox[
            
            RowBox[{"\"(\"", "\[NoBreak]", 
              "\"assuming random selection from a standard 52\[Hyphen]card \
deck\"", "\[NoBreak]", "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
             GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
             LineIndent -> 0}]}, {
           StyleBox[
            
            RowBox[{"\"(\"", "\[NoBreak]", 
              "\"the value of a 7\[Hyphen]card hand is determined by its best \
5\[Hyphen]card subset\"", "\[NoBreak]", "\")\""}], {
            FontFamily -> "Verdana", FontSize -> 10, 
             GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
             LineIndent -> 0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}},
          AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
      "Labeled",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           
           ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
            "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      InterpretationFunction->(RowBox[{
         StyleBox[
         "Labeled", FontFamily -> "Bitstream Vera Sans", 
          FontSize -> -1 + Inherited], "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"(", "\[NoBreak]", 
             GridBox[{{
                StyleBox[
                "Bottom", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], 
                StyleBox[
                "Left", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
              ColumnSpacings -> 1, RowAlignments -> Baseline, 
              ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], "]"}]& )],
     TraditionalForm], "Output",
    CellSize->{550, Automatic},
    AutoStyleOptions->{"HighlightFormattingErrors"->False},
    ScriptLevel->0,
    NumberPoint->".",
    RenderingOptions->{"3DRenderingMethod"->"BSPTreeOrDepthBuffer"},
    FontFamily->"Times",
    FontSize->14,
    Background->None,
    GraphicsBoxOptions->{DefaultAxesStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsAxes"],
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics"},
    DefaultFrameStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsFrame"],
    DefaultFrameTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"],
    DefaultTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]},
    Graphics3DBoxOptions->{
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics3D"}}],
   BaseStyle->{Plain},
   FrameMargins->10,
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False],
  WolframAlphaResult[
  "probability of full house", {{"Properties", 1}, "Content"}]]], "Output",
 CellChangeTimes->{3.818412762193364*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"e03db980-8050-4a30-9cfa-45e898959515"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "52 choose 12", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", "Binomial[52, 12]"}, 
      "ExtrusionOpen" -> False, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Binomial[52, 12]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TemplateBox[{"52", "12"}, "Binomial"], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "binomial(n, m) is the binomial coefficient"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Binomial.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/GammaBetaErf/Binomial", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/BinomialCoefficient.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Identity", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["moutput", {}, {"206379406870"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox["206379406870", Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Scientific notation", "scanner" -> "Numeric", "id" -> 
     "DecimalApproximation", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"N[Binomial[52, 12]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                   TagBox[
                   "\"2.0637940687 \[Times] \
\\!\\(\\*FormBox[SuperscriptBox[\\\"10\\\", \\\"\\\\\\\"11\\\\\\\"\\\"], \
TraditionalForm]\\)\"", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.0637940687 \[Times] 10^11"]], 
                   LineIndent -> 0.54, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
                "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], FrameMargins -> {{0, 10}, {0, 0}}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "NumberLine", "id" -> 
     "NumberLine", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"NumberLinePlot[206379406870]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{2.0637940687*^11, 3.71482932366*^9}]}, 
                  "2.0637940687`*^11"], 
                 Annotation[#, 2.0637940687*^11, "Tooltip"]& ]}, ImageSize -> 
               330., Axes -> {True, False}, AxesOrigin -> {0, 0}, 
               PlotRange -> {{1.44465584809*^11, 2.68293228931*^11}, 
                 Automatic}, Ticks -> {{{1.5*^11, 
                   FormBox[
                    RowBox[{
                    TagBox["150", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "150", "SRString" -> "150"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"billion\"", {
                    ShowStringCharacters -> False, FontFamily -> "Helvetica", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000000& , AutoDelete -> True]}], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2.*^11, 
                   FormBox[
                    RowBox[{
                    TagBox["200", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "200", "SRString" -> "200"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"billion\"", {
                    ShowStringCharacters -> False, FontFamily -> "Helvetica", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000000& , AutoDelete -> True]}], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2.5*^11, 
                   FormBox[
                    RowBox[{
                    TagBox["250", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "250", "SRString" -> "250"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"billion\"", {
                    ShowStringCharacters -> False, FontFamily -> "Helvetica", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000000& , AutoDelete -> True]}], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {1.3*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.35*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.4*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.45*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.55*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.6*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.65*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.7*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.8*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.85*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.9*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.95*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.05*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.1*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.15*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.2*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.3*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.35*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.4*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.45*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.55*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.6*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.65*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.7*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.8*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.85*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.9*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.95*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.2*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.15*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.75*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2.25*^11, 
                   FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, Automatic}], "\"\""}, 
             "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Bottom", FontFamily -> "Bitstream Vera Sans", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "1DMathPlot"}, {}], "\n "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Number name", "scanner" -> "Integer", "id" -> 
     "NumberName", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"IntegerName[206379406870, \"DigitsWords\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
           "\"206 billion 379 million 406 thousand 870\"", TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Words only", "input" -> "NumberName__Words only"}, {}]}]}],
    Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Number length", "scanner" -> "Integer", "id" -> 
     "NumberLength", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"IntegerLength[206379406870]"}], 
       XMLElement["moutput", {}, {"12"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{"12", "\" \"", 
               StyleBox[
               "\"decimal digits\"", {
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0}]}, "RowDefault"], LineIndent -> 0], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Alternative representations", "scanner" -> 
     "MathematicalFunctionData", "id" -> 
     "AlternativeRepresentations:MathematicalFunctionIdentityData", 
     "position" -> "700", "error" -> "false", "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Binomial[52, 12] == 52!/(12! 40!)"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                TemplateBox[{"52", "12"}, "Binomial"], "\[LongEqual]", 
                FractionBox[
                 RowBox[{"52", "!"}], 
                 RowBox[{
                   RowBox[{"12", "!"}], " ", 
                   RowBox[{"40", "!"}]}]]}], HoldForm], FrameStyle -> None, 
             FrameMargins -> {{-1, -1}, {3, 3}}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Binomial[52, 12] == Multinomial[40, 12]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                TemplateBox[{"52", "12"}, "Binomial"], "\[LongEqual]", 
                
                TemplateBox[{"40", "12"}, "Multinomial", 
                 DisplayFunction -> (RowBox[{"(", 
                    RowBox[{
                    FormBox["52", TraditionalForm], ";", 
                    RowBox[{#, ",", #2}]}], ")"}]& )]}], HoldForm], 
             FrameStyle -> None, FrameMargins -> {{-1, -1}, {3, 3}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Binomial[52, 12] == (12 Beta[12, 41])^(-1)"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                TemplateBox[{"52", "12"}, "Binomial"], "\[LongEqual]", 
                FractionBox["1", 
                 RowBox[{"12", " ", 
                   TemplateBox[{"12", "41"}, "Beta"]}]]}], HoldForm], 
             FrameStyle -> None, FrameMargins -> {{-1, -1}, {3, 3}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1\
, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "AlternativeRepresentations:MathematicalFunctionIdentityData__More"},\
 {}]}], 
     XMLElement["infos", {"count" -> "4"}, {
       XMLElement["info", {"text" -> "n! is the factorial function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Factorial.html",
            "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/GammaBetaErf/Factorial", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Factorial.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement[
       "info", {
        "text" -> 
         "( n_1 +...+ n_k ; n_1 , ..., n_k ) is the multinomial \
coefficient"}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://reference.wolfram.com/language/ref/Multinomial.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/GammaBetaErf/Multinomial", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/MultinomialCoefficient.html",
            "text" -> "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement["info", {"text" -> "beta(a, b) is the beta function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Beta.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/GammaBetaErf/Beta", "text" -> 
           "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/BetaFunction.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://functions.wolfram.com/GammaBetaErf/Binomial/27/ShowAll.\
html", "text" -> "More information"}, {}]}]}]}], Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Comparisons", "scanner" -> "NumberComparison", "id" -> 
     "Comparison", "position" -> "800", "error" -> "false", "numsubpods" -> 
     "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"\"\[TildeTilde] \"", 
              TemplateBox[{"\"\"", "0", "\".\"", "6", "9"}, "RowDefault"], 
              "\" \"", 
              StyleBox["\"\[Times]\"", 
               GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
               False], "\"\[MediumSpace]\"", 
              StyleBox[
              "\"the number of stars in our galaxy\"", {
               FontFamily -> "Helvetica", FontSize -> Smaller, 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                0}], "\" \"", 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{"\"\[TildeTilde]\[ThinSpace]\"", 
                   
                   TemplateBox[{
                    "3", "\"\[InvisibleSpace]\"", 
                    "\"\[VeryThinSpace]\[Times]\[VeryThinSpace]\"", 
                    "\"\[InvisibleSpace]\"", 
                    
                    TemplateBox[{"\"10\"", "11"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowDefault"]}, "RowDefault"], 
                 "\[NoBreak]", "\")\""}], {
               FontFamily -> "Verdana", FontSize -> 10, 
                GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"\"\[TildeTilde] \"", 
              TemplateBox[{"\"\"", "1", "\".\"", "9"}, "RowDefault"], "\" \"", 
              StyleBox["\"\[Times]\"", 
               GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
               False], "\"\[MediumSpace]\"", 
              StyleBox[
              "\"the number of people who have ever lived\"", {
               FontFamily -> "Helvetica", FontSize -> Smaller, 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                0}], "\" \"", 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{"\"\[TildeTilde]\[ThinSpace]\"", 
                   TemplateBox[{
                    TemplateBox[{"\"\"", "1", "\".\"", "1"}, "RowDefault"], 
                    "\"\[InvisibleSpace]\"", 
                    "\"\[VeryThinSpace]\[Times]\[VeryThinSpace]\"", 
                    "\"\[InvisibleSpace]\"", 
                    
                    TemplateBox[{"\"10\"", "11"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowDefault"]}, "RowDefault"], 
                 "\[NoBreak]", "\")\""}], {
               FontFamily -> "Verdana", FontSize -> 10, 
                GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"\"\[TildeTilde] \"", "32", "\" \"", 
              StyleBox["\"\[Times]\"", 
               GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
               False], "\"\[MediumSpace]\"", 
              StyleBox[
              "\"the number of people alive today\"", {
               FontFamily -> "Helvetica", FontSize -> Smaller, 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                0}], "\" \"", 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{"\"\[TildeTilde]\[ThinSpace]\"", 
                   TemplateBox[{
                    TemplateBox[{"\"\"", "6", "\".\"", "5"}, "RowDefault"], 
                    "\"\[InvisibleSpace]\"", 
                    "\"\[VeryThinSpace]\[Times]\[VeryThinSpace]\"", 
                    "\"\[InvisibleSpace]\"", 
                    
                    TemplateBox[{"\"10\"", "9"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowDefault"]}, "RowDefault"], 
                 "\[NoBreak]", "\")\""}], {
               FontFamily -> "Verdana", FontSize -> 10, 
                GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Integral representations", "scanner" -> 
     "MathematicalFunctionData", "id" -> 
     "IntegralRepresentations:MathematicalFunctionIdentityData", "position" -> 
     "900", "error" -> "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Binomial[52, 12] == Integrate[(1 + E^(I t))^52/E^(12 I t), {t, -Pi, \
Pi}]/(2 Pi)"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                TemplateBox[{"52", "12"}, "Binomial"], "\[LongEqual]", 
                RowBox[{
                  FractionBox["1", 
                   RowBox[{"2", " ", "\[Pi]"}]], 
                  RowBox[{
                    SubsuperscriptBox["\[Integral]", 
                    RowBox[{"-", "\[Pi]"}], "\[Pi]"], 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "12"}], " ", "\[ImaginaryI]", " ", "t"}]], 
                    " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], "52"]}], 
                    RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], HoldForm], 
             FrameStyle -> None, FrameMargins -> {{-1, -1}, {3, 3}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                TemplateBox[{"52", "12"}, "Binomial"], "\[LongEqual]", 
                RowBox[{
                  RowBox[{"-", 
                    FractionBox["\[ImaginaryI]", 
                    RowBox[{"2", " ", "\[Pi]"}]]}], 
                  RowBox[{
                    UnderscriptBox["\[ContourIntegral]", 
                    RowBox[{
                    TemplateBox[{"z"}, "Abs"], "\[LongEqual]", "1"}]], 
                    RowBox[{
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "z"}], ")"}], "52"], 
                    SuperscriptBox["z", "13"]], 
                    RowBox[{"\[DifferentialD]", "z"}]}]}]}]}], HoldForm], 
             FrameStyle -> None, FrameMargins -> {{-1, -1}, {3, 3}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "3"}, {
       XMLElement["info", {"text" -> "i is the imaginary unit"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/I.html", "text" -> 
           "Documentation", "title" -> "Documentation"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/i.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement["info", {"text" -> "abs(z) is the absolute value of z"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Abs.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ComplexComponents/Abs", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/AbsoluteValue.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://functions.wolfram.com/GammaBetaErf/Binomial/07/ShowAll.\
html", "text" -> "More information"}, {}]}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False, False, False}, True}, Typeset`aux8$$ = {
   True, False, {False, False, False}, True}, Typeset`aux9$$ = {
   True, False, {False, False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "9", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.465", 
    "parsetiming" -> "0.227", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSP27481e2209ch428a56ec0000496c0ac91666f8ca", "host" -> 
    "https://www4c.wolframalpha.com", "server" -> "11", "related" -> 
    "https://www4c.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa27491e2209ch428a56ec0000523e2gb2b29220485682623217450298813", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 9., 
    "Date" -> {2020, 12, 31, 23, 13, 3.9724414`8.351632480350967}, "Line" -> 
    9, "SessionID" -> 30914617378504020026}, Typeset`showpods$$ = {1, 2, 3, 4,
    5, 6, 7, 8, 9}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", "Binomial[52, 12]"}, 
   Typeset`open$$ = False, Typeset`newq$$ = "52 choose 12"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{178., {45., 27.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"a340a9b0-042d-441f-a99a-07c2a43868ab"],

Cell[BoxData["206379406870"], "Output",
 CellChangeTimes->{3.818412776025363*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"3326845e-5c36-4b0c-bae7-ac81c027846e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Take advance of the suggestion bar", "Subsection",
 CellChangeTimes->{{3.8184522575579543`*^9, 
  3.8184522775859575`*^9}},ExpressionUUID->"28782b72-8160-4d5f-9f4d-\
b780946ebe9a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvV1zHUd656ndudnL/Qr7CfZuYkM7Nzs33L2aiNnxlS8mesINQOGYng23
N9YzF+7TPW3YGz3ekMMNuiGEPXaTLQsYEU1YGr2YBA9BjWSAskiABFovaArg
G9CkSAEgcM4BIEVwqypfKjMrq+qpPJUn6xz+M/7BqFMn66knn3z7VWYd8H/6
N//uX4799y+99NL3/4fon3/5nf/nf/u93/vOv/8//8fow2997/uvjH/vu7/z
f3zv9787/t3f+1/+zT+JTs7+dy+99N+i/PHxcyQkJCQkJKQXI7311lv1ntxP
Ui2+ISEhISEhITU/gSWQkJCQkJCQ+klgCSQkJCQkJKR+ElgCCQkJCQkJqZ8E
lkBCQkJCQkLqJ4ElkJCQkJCQkPLSxsbGhx9++JZIS0tL2TxgCSQkJCQkJKS8
dHBw8NFHH52enrKPtWOD9SRYAgkJCQkJaZSSihNgCaRhSZuvvvzSSy+9PPZO
aEeQkJCQkOIkcQIsgTQkiaFElAATSEhISE1JDCfAEoHT5juvjr3MJ8n4ofvV
dzZ93Ugklxv0dzXBvBqEl8fe2bTcpp51ieGPQ123GlAcJANa0suv+ihfo6sY
CWkEU4QTYImQKZo5suOrn8fuaER/+dW+B9jYSO0j7DtjllnG1+ID4sDS4OIw
cJZocBUjIY1aYisSLGW/BUsMJPG5Q336jFcpXvXFEjVMSxH81D3AsijEQZCn
/EUBcZC2g8QhKaTvParGVjES0ginEWCJu7956slylcSfvrRBjC/K24ck2wWW
XJlF70yGV8coWyQ5A2xFt33NocVW9Qf2TDESfyMLSiiiQIxgHJ7r1W1rDs+z
LcJuMUwcCljC2OzTyzYaVYyENMKpSSzx9Nyf/PnL3xP6k4/vll3ALvnX7zOW
+PWP2IV/8+vna++ndoR+tGbeRVz4/NrfsDPvXyu/Y0FiU54cqwpJouRbNU/R
srBlWTwHTvIf1qq4XXWA3dws3fDnRbBOi3qWQpZ46WUzVjlTVpA4EBIhDrbq
NvywNBm7p2HikMsS1qaeZhyNKkZCGuHUGJZISCDCAJGS+f1vz/2m8CKTJez5
Y1OcTBKQ4HeJ7yhx4vlvPv7X/bKENlaxcSp/1aH8MZQPry/LpYZN/npFapQN
zamRgkXxooVfutvV5w7CavM7yqNm8Q63fSqS85B4lt005gwjc4A4kFJZHIR7
6YbYmOGkaDJqnlftz++h2kMuS4yphTZrcFSqGAlpZFMzWEJFgjTdff9vBQPE
875YWHieLDtE876yjhHjQQ5L8MxJioFByRN9JVc/amEJOVa9WkISBJawDnXG
Sb7HTvntR/EmMtVtLyzxnLxTU8gS6vn86IaJAzUVxcFWeP1cGb9qdwrUHqgO
2ko2ElWMhDSaqREsYUzxlvNWlnhOWJfQKUWFh+c6P8hjy/5I6fKImoh/BqGU
JezDrnlZ+kuQaOYpYoqyF9JobvtiCeHEZvpsbt/DzmcJ7bTrROMrDhWTLQ75
P4eQWaq82RiqPeRa1N4Mesm49+hVMRLSiKVGsIS6dKAliRCuLKFbVhY6kqQy
TE3rEsqedvGgXvq+BI0lElPaC3mV35eo4jZpgI0nBZ4Sj0SiYkX+W6kDYAk/
cdCSWxzKWaLKssQg42BatVjMKZwflvBTNCSkFzuNNEuYWycDYAk+wr1T/mal
2J/Iy2LdEC6eLor4hLDwS3Db87qE4U7mTt5ZwlccHJNWjPgD4fcuRMdCtQdr
87Xs1ZXu3oxIFSMhjUhqBEt42uPImvW8x6HO5eW/0xDPYuqv39SXJzMv9mfe
veQvrG0aJqu+kFbB7fpZIrJolCH7iqmS2SdLeIxDeSqPg/yzn/k/jRF/seTV
vt699NoeClhiLH3J+NVMSx+BKkZCGuXUCJZgP7VQfsTBUtm7l89LWMIgh+eZ
xYd63700x6byPyBhX9k1fqZhJHWYLLveuFfuF3S3fbCEpQgaQuVlMd4k6Hei
8RqH8kSIA6W+y381mtoK0h6spvL2b2pmicBVjIQ0yqkhLFH2m1D1t5zs5xvl
LGHjE3+/CbVtWRD+HFXmL/To70/q7/Vn/zaR/sJazh8vEr7Y/KjoduW/L/Fq
eXY9BC+9nPlvKAbBEp7jQEmlcWCZMm8omttg5n/wYvczTBzy373cNP4GV7IH
UStLNKCKkZBGNzWGJeIk/maU9W9ViT9FFQHDWjrvx2sXOb8Jjaxlf2dq/VtV
cart3cuGprIX0mhp+AdYxIGlEY7DCBcNCamxqVEs0V/K/VtVpASWoKThH2AR
B5ZGOA4jXDQkpMYmsARPYAlKGv4BFnFgaYTjMMJFQ0JqbBotlpB/A7Naqun/
42h0ivej+Z83cBgi+7u6SQlxYGmE4zDCRUNCamwaIZZAQkJCQkJCGlD66KOP
3hLpvffeq+WkmsASSEhISEhISP0ksAQSEhISEhJSPwksgYSEhISEhNRPAksg
ISEhISEh9ZPAEkhISEhISEj9JLAEEhISEhISUj8pjyVuffrFaCsqaXAfXgSf
UdiRLHtzPIQnENRASZZ4/OTg8dP9WE8SPT2QevR0/1H8VXSQHD+RedjBAf8Y
H8irkm+1Y/HxyX56Rpp6csDtcyMiv/yoe6W4JPzhBg9Ug6onn3/+ueKJ4ozq
j+bSvriX4tiTfdO3J/pVuoePnu5rDpuuloQu43PG8yeZb59kpJbCcDuto8z5
TIms5UrPZP3RCig/GsVM7ZAKW728j56UFvnAYi2n1EaFPnpqc0y9I7nsj57s
xXqaKDl+/CQ9UI95NttX8tiup6n9kpwZ6bXTnI4MT/b1FlWsA1PZ7pPtYlZZ
L7RbM7qSTU+Uzmj21mL/aRcSHLNK7fjZoa8oW240so7ZimBRJpvFYVrQ0hao
x0dOELJ9PlVHVN4mxZR3oDTF+CvJEl/vHyY6UnSo6eAo0t5B9tv4eO/AuFx8
TC7hYl8dqEotsFtEeZhMO1avmBEzp3bJnsgZdXzVk/QWBxmXDK/i0qWOaRFQ
S22JjOJkTtwyBVTOGD6Xe86dF3Vh3EIvBSuI4ZVRiem3mUIZRbOX3YhSST3m
Fda5vF/vHxUWOcc3cqn3cnOmZ/YsBT9Szqdlf7L3LNLT/QIdPNk7YNme7CeZ
9eM4Q6z4jLyK52cZZH5VIgO7Sp58uqdcu//M6D7N6cjw5Guj11i1b0q7r6Vn
FetQak/rgHmjWVZiasg4ZnTYPbOj5YUrz4dMMe2mir21+59VZoQhGrdkKwxs
yS32DPsZJ3mLTc/w1sVrhBXhQBRTbcPpR3lV0g4PjiRLPDvqpjrMqPjbYh3Z
7FS63HpJRVNRxzcz91OorIXa4yZ9Lih7P86XFqfAMj1n7YUt9qr/Ig+21LLs
UQ9k2pM6jP81zxymH/dtJ/lH9cwz7ZL9Q+VGSk7z7upVh0dm92lOR4Ynh9Xb
pLXZV+oLnlTXUFx7iRobMecgGw5bD47yP2YkWaLTPXbTkaqOouSMkUf9WGK5
I9S/M8lXUcc3MmQvId2l4+ibQ+iyPht+5p2nqlNncUoKyM50LCV1K6xLef0X
Oc/VgoKzsh8cdXV1dOknO91Mfk3PLCcNU3nZ7DJqRy0mNeD9dw1bO4EnJQ2P
3HGcL/SuTplCOVariPE3RxKryuruKHNgiTnBYe5PciBZond8WqCuUMG3veOT
SN1eJCNzct6Sn3+Ve9+ei0vJSYsnUccXnpx0baYUfwq9IvhGjJvqrTV00mfp
dk55tVBTi1CxLNZyFZdOyZl6xYvZMy+nF7bf8rIi+yy17qpSKFvBWdmfdXvP
OpoOu73Djqb4fJItOe4+68Y6jJW5VuZPLokzdHvqLQ5z9Ey5Ss2vdB9r2wvS
keGJdeCSPSjtR8RGa23nmavMe7l3Qwf1FHm9ES0yVWNb/RYnXVuQu7wNiCFF
H1jKvEpbrNJ+MnG2+Zb5yNth9FGyxPHJN0KnicTH09NY8sypUJpBOSMzqxlK
dWoza2Q4MXzQPxqm1Dzi26jjO7pUWpbUvfy4ndhMqWdsoavmc57z9IJoypRI
RvXUet5m3zgvL+fSMjsWtrjUlS4nlTpToZSCnygFP7GX/TCZ8auLs0SuGCSI
j8+EKlhIRKqd5nTkMk8efrX/j5/eHbAnWztPf3rhmqn5zMfkzGd3H9E9aYQK
hp0ahqN+dJqv0rKcaj23woXVi0m51hxCjVHltMJNT/V/rRfyDiubnNEIpT/x
mZQlHFrCUCnu+KF9eBF8RmHdyh6vMzRYzamdWjz53p9d+K0//KtBenLh6ur/
/J3/t5L+v7l28GhDEFFgiSZrGH1GYd3KfnDU2ReS7zYYHw8yX3Eddg4OlW8P
heKPR4mMk9lsNikZ+qmdBw931m7dvrm6Gik6Pnh2GKSdfOdPXo9m563dpx/d
/pJN1n/9zspX+0fRv//77/+Fb0/++f/10+iOfNmBoCjzPx3701ANEoI6veOo
t0Z6dtSh5K/AElVXsdxWvaQ+/uWZscmJt37T7y1EHkvHz7uccuuMetnLdTtL
M5PRxzOta3fIcbMPVpQVRaci5JZI6M5bM5HZP/64pio+IRS24l1MD6tHKVvq
XH/6CbJeqPjXhc8OyyV+gkfKXKvcZvCd3d9cmJ9/XU9vvvnm+savKldxQUem
6Xt/doEhBJvWI/2z3301mq+jg5QlvHnC7lhz/j53FpzCOLzqCdVgrbExpO86
5WeIaH/xyhW1z773/vtfPf26aCMmyxLqBpPhnl4pOc7oW3jUspxavlUH6qxX
JzwDmzVszYN70qvU8U/UW+/mWM6U3diVs7EEm+PS4li9zYSuxGceAWX/3Yxe
YRHyGpV1nzH5Kp2pbfXbyzNYUEwKSxQYyXzFPJwsZQmtotU2Zim15rPS6uTl
DgXvZcpu/CmJXO0dPN3Ly2b5kxS2nNYbFdyX/30JQvvRIrZ55w4bhb7c2uaP
Niff7Oz85urVq9H56Ns0INkmZISO2JELh5Qf/vW7ebsJv/0ff+7bE5UN+DsS
8/aXJZgnMj/FEw/K7L9nKqvsWi2YtU3ip5ahoySbtWsbot+0CkXYC+7OIfmV
oqgnhxfSXdLXIZifd+/dj2j/9UyanZ1lfbZ3qjdv0Q4z6xKxq72TWPJ1jl76
9kVBNaWeZ8pyKv08Vr9SimMJuPbQp3gljpdem0xHdYInScfX6+Ikz5/UZ0tv
ZVdZMgsPxTyuxs2chWmh030256M0AvYGI7wqJiKzLJYSycYgZupMeyhtFUYx
s40kU9hepprKOojqoWORraVmrzax2mSLS+a6B7HgJ/aCs7J/9fV+kyVrh9iR
o0ebaPCJnm463eOeHuQokouLVy5evGgZW6p0ZKonnd5Ht7+cXvjwt/7wr/JY
4p/97qt/fuFa+8bmV/tHnjzRWOLCtT/XdzSiu/+5YAkWkzQ/Zaywvo9n9KP8
IPey/StzO5qydxfz6YkrUVhHD0dntN6t6ljt7Lb3LZNsVaNRbXCorNM0Gr0T
TWUXJq3CfKKJC9jpHUcdMyKHd999d2FhgVHE/Px89JGtKMYblJkxjR0oLHGa
OHaaqsy9nvI6a0+JtnlhSgKaqbR22OQ788uJMbELEH2VsgQ/ZoofA8U0yvXa
RtYx9XZMSsc3vz0+2fhj1Zq89b1rsUutGe7Y2Mwfvzaj3TTj+eZp6rk8YBOc
uPDaL1qxqV/cE/eNrsoJnTq9Gm6bEWCucv1ySRbh5FS7O2cP0UGMq6KT95Uz
rDinp5u6hXimTu3rmKQYZN9qjsUltRQzv7C8vNyBJOZ3lGN57Z2sh1Fj1ssS
NaqcKG2wGjl/P7kvuypyNeO5GXP98qhCe/IW8e2qlT07fT/+ei8+eLp/68L0
jz7Y+ssfxHa+e2Hrq88Wv5vY/OG1JMPXN37E7zL9l59HV+2/d3byRx8kJ8/e
ePz1jR8KH370QWL2aWyTKT7OkoP+1eNEafcp6Mix+PRx/eOPI5Y4ePYszcln
ljjI6xsb0dD07LBTPPSVdGSaJ+zdA6m/uPjfDKnf/t9nFzx5wtmAT0yWmBhD
rshP8iR33jSnTnvzo89EViOFM5cYalSuKFipyKwYFLut3Uh/5uoZ01mBaGGh
lZckdeosi3ZWpieV/VdarNpWo4O1W7cZP3z99dcnJyeMKI6OjqJjdn55ZUX6
b/iT/n0J6aoWYbOPGMVUqju/0jNTg5mfoUIyc23yvYDdnny6Z9++tiEntXim
0J/KVbzMcyb+MbjZufhXiamZ8/fESXlrMS9Ec72cznonu+dbIr/0/CTr+W+s
E25PycnmGraCYQ1d6rNtTGARSKIhqSDy6hutCMoiCXumnvxYsZNexc5sTPIy
iq9mNtL4i7WgXJZQwiXaRgJLqsH42N7C8wsb6Tci5omH4hZqfTHLwkNbWaJj
o7y2KIk2prRVWaHGWpC5mZVeHm88WR3IL/vjp3tMciqXZyI2iDnhs73Hn13+
7g+mv/uDy2vR+WtzMSo8jVHhh9eS/Nf+y5kfLK49ZdQx9158bfTt3Htf70VY
En8b5zf+Vv9eib7mynQfW0eWZ05P/+s771z74AP28f7DhyvXPxbZ4m9vrK5G
pHHUPTbGFqeOXOJJ9O9/mHmbwhIT/2n24KjnyRN2C3bMViE0zV8zHhYkS1A8
sc2PpaLMO86Xl92d6mSf0j0pZwlS6Qpnf0ueYidz8KnPiiuU+TSdNt321SXG
DNeuXfv2228jhIhAIoKE5eVldj7q1ywniSWyVWDtpEocMgXMNJvi4ChDcTrq
ipPK7PCNMiafajOp4k+eq7zj2xyQz93cB4MlktulqMBvnbJEnufqHKTMUGnO
ZBYWs78tdDb+SaVE5rSnzePf2KJ3qvlwkr1KW/+RT992C7aiqSHqKa+OGAbz
hpriwipLKJJ8LHEwPDRvbStv4rBEFAaK8RKNflO16hkTflN8edWy50/oEQ8k
IPE0YQkOCTFLfPfCl4IoGBgk5JDmT+hC3p1nk2YJIKGooPtYFaHCjZur7PjL
re1oFNr41afs4/2HO9G3kjTEuFRDRy7Qb//Hnxf/APN//d1Xv9o79OdJCUtc
uFaQv9STAoogzE19igYPTRGZdgim8pcFKtgpZAkiHlT0/DTbKriRCxfSN6Uj
fmD/k/jt27fVFyek24YDOSxRVHD11j0qRxVmKJqRf2OZMTWW0G5R4Ezc8Qs8
kSN/NCNQWeIbGkvE36b7+PHt+Iwz+ZrxiJ3ns93tfJY4LWaJNErpVd9IKpAw
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
dGZtbe3wqAOWUPXF5q9zYnXr8KhLjDxYogHKdTi/O2hVXCywREOk9rvPczrv
6tqtZ8SaBUs0pjbBEk1jiZXrH7fb7UePHj3XU3Qm6jWXLl0CS0iVxeoyMfJg
iQbI7u3K9evEKi4WWKIhUge6K/3XLFjCnx60p1pnFx+QarMiS9yezVhuNEss
z58Zmxxf2LXbSb6dWNgtaV0yWx21UxrzR4+fvP32299+++3znHT58uU7X37p
kSVW8surRqOYJVZE5OkskWc5v4CEWC3e+XKLEvnGsURBLRRlLkQInm2nrztW
cqyaLD4/evwVvYop3UFrzGFZwrGKWWPOaZm83+3YG6q/Kq5yCXmgo9UsWCKo
wBKNZYlb6xtR08rrX1G6devWjRs3wRKRblNjVR55sEQzWeL2+jq9iindQWvM
YIm6qrg6S5AHujKDYImgAks0liU+uXEz6kRRG7tz584rr7zyO0r67LPPRpkl
qvfuG9RYlUe+cSxRSaPLEpWqmNIdtMYcliUcq5g15oaxRBVVHOjKDIIl3JVM
6GvtqVacZtdO7l85mxy2pq7spBkeiIMrc/q3aW3enG3xNHs7OZOT/wG/19SV
doYlkktWhTOrx/cWhTOLD9kkpd6l29tZnBKW1+ZaU+37ykGfLLG5MBN1AanJ
ZZ0lkmMm9czE9PwEO99a2owsby1NSCPsTJYltpM8rRmRc2ZyWtx6eiPNII1I
36Y3OvpxAUtE6dKlS7J/LSws+FiXMIO2oo8kK2nQOD9QgmZlie2l8SRo49ag
qXFmNSXDmxi0FvAGNVZpm3dniRXu1bjqlRIrFsk4gKXNw9ZCtDNj81fVWlC+
is9kr7WxRKZmdZYwalYaUWvW6md2oumjO3S14yKWoFQxpTukynlq0BqeDs+8
ipdFg88rMrOWHUm2aqli1pjjNpmtYo0lBlnF8pKV8s5bcaArq1mwhLtux5Oz
nIVbytTcmlvlGSRLsBlc/TY7rvL8HZE/PqlZi4kluiqBlixLxM7ciyam1bkU
IeLjuZvauoTqVWSZ/XvCfeufJZT2f3U6wxJslIimb2VA4CeTbs5Oao/b+tRm
61nGqLh7vhX3svPbVq/4t+e2NyblhFvGElGampqK+tdPfvKTzNJfHSyxLEae
7jEP2kpmWFAG/HgUJQQtDnguS+hB64qgbWVZIr1F7JWtgDeoscq2eWeWiPw/
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
QEJCQkJCQuongSWQkJCQkJCQ+kl5LPH/A4fn+XI=
    "], {{0, 425.}, {708., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->72],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{708., 425.},
  PlotRange->{{0, 708.}, {0, 425.}}]], "Input",ExpressionUUID->"165d6773-8d99-\
4e3f-a545-a6d9c8ce122e"],

Cell["\<\
You can also use it to plot without having to type in the rnage.\
\>", "Text",
 CellChangeTimes->{{3.8184523541829567`*^9, 
  3.8184523614159565`*^9}},ExpressionUUID->"b4a860c8-467a-49d2-8ace-\
4e2bec47d734"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "*", 
     RowBox[{"Sin", "[", "x", "]"}]}], " ", "-", " ", 
    RowBox[{"Sec", "[", "x", "]"}]}], ",", " ", "x"}], "]"}]], "Input",
 CellLabel->"In[70]:=",ExpressionUUID->"001b5fad-a633-44dc-85fa-9376760f0989"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", " ", 
   RowBox[{"Cos", "[", "x", "]"}]}], "+", 
  RowBox[{"Sin", "[", "x", "]"}], "-", 
  RowBox[{
   RowBox[{"Sec", "[", "x", "]"}], " ", 
   RowBox[{"Tan", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.8184522681119547`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"df0c0583-6d95-4e68-b752-27223ddbf49c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], "+", 
    RowBox[{"Sin", "[", "x", "]"}], "-", 
    RowBox[{
     RowBox[{"Sec", "[", "x", "]"}], " ", 
     RowBox[{"Tan", "[", "x", "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "34.55751918948772`"}], ",", "34.55751918948772`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[72]:=",ExpressionUUID->"d776f7bc-0017-408a-bb07-828443f71e4a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwdkX1QE3QchxeQSS+oDUlo89iJIkm8DAZsMfb5NVAhrilg/iHHQMWwXbpK
SHkxJu8lNoyLEA6PYzC8m6C0g/LG+AoRCqxQVq3tPA0iuXh3ecGwF+qPzz33
+fO5R3D4ZEq2G4fDiV7bfzx819ecvodRYd//xBemA9vb4hmJzEsh7XIGS1vN
+QXGyEede3NFyuBWY3HGyBiVlK42pUUxxBR4HjoXyyh4UhFqCmY4kZ3QPyJm
tPh1p1+kgEGn0ARtjmb0e+3YG8RlsIt7tRmRjK5MLC8d9WDYELDypz6cUXlH
WMkOJxDvJVIuhTDS/1Jj9nwA5C+rv5UEM/Jwpw7uCHBtwvBqaRCjQ1KtIdEI
/DY6XWvZwcimmsm63gDwegKe+AQwUvs+Ht2nAfY3Zx7JFKz5DJbIQ7IBU64t
3Pkyox9Dy06bA4FHSu/6WF9Gft887v1oHRCYtI9T7sPoSBLvzZghGS5uvfXd
lk2MChaKIjcKZTg+1KOKW8fo42Bha86kFE3XnXcr3Bkl1l9t0VdKYW0Ildzh
MHI1OVZku6SAWr/+6CpoduGFwYc5sfDxrWutWgSpW862nLgtQbL7+PPjcyDv
i+ri4XQJNHNep3gzoOLZmjDtvBizN8tf75wCtT2j2svzEmPgnbz7VjvoS9Hm
X43yaCynde3eagN1GhvfHxmLQohs/urbP4DCD6aozmRE4RL3WKHre9C1OQ3/
vSIRxv5qnpRbQM+9uKn/zgYRnp6+l1Q9DMrMPyv9RxcJtemAr/8gyD38rWov
RwTa2mqKj/eD/HWtfq6iCDi0loddfaD6QJXr58AIbCzwVDwxgTw4ocq9diF2
Zyd0J9xY86lavyquE6JQoeF/2gPCU5fit2QJ0SXuLbUZQVOlHX5TEiGmt63M
CLpAtUWCUdVOIfheolRVJ8iQ5VZXFiJEyrL6htEAmrEPuPJThaicMAj+vgJq
Gshv0F4Wwjw6XblHD4pp55X8xI/AH90Bi1od6PywhyznXgReac48aG8GnbNW
nUx2RkL5SaN522VQS9jQhQtFUajNtW1/txH01e2d48ntMRhWeld314PiKhXD
Z7pfAxdpFYOfr/XK4zn6GJDuX6uxfgbil9mffem+HK0ca8GkFpRrPl0XVJGI
+QfcvEfVoFO6DzPYB/uxsMsRm7H2J47RrTh+Kv4F02Sc5w==
       "]], LineBox[CompressedData["
1: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
vmFA
       "]], LineBox[CompressedData["
1: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
ql3Tz5rPGewOxEYbrgT+AQ9HRQ0=
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
cyii
       "]], LineBox[CompressedData["
1:eJwVVHtUzPseTQYd6TTkmGtQSmZqiPl+f1Oa02scoVWU1KqkukqchkQPg6SU
HJQoNQlJD3qolFJRqZ1befW4DvJoItURUekSGpzunD8+a//xWZ+1P2vv/fno
++1cv0VdTU0tVFX/YMf5sfIGRxF6tuKO9TwXScujvmPe9iKMjFbOdmxwkGS8
XrG+11aEKU+v6GbVr5Ds+prNldqIYJDgpTVxwFKyYqp675BYhJnLwtVio00l
s+b6FoaJRGjRag4e1hFK3pggVLlEhFObxqd//4svqbbRszxoLEJjoE7Zx236
kuPOkazJhiLE/vo423nzvyQ+m7ta4nVFqIvN0nOM05aQ3Zby6bNF4E5hK0c1
JkhYR855n9YRwbx7stdAcI9NR5py4byfRZhfzl47dPtNff7lDUPZGiKwdqRp
ykLG68Nrr1caTRTh4nj78SdiDaxp40Rd+cGgbo7+cE6fNvS6ZatFXxnMyd9o
f2ynDhonmj61GWTQQir8D6TNRuovKZlN/Qw+DSgqaz3mIoD/McChh4FH27Cf
wTtdaDlcHXN7wiA2gqkJaNNHtxf7luIBA7ZkA3dbjwHKgnbG+bUwyLTpa9n+
ZgHcTpnMCWpg4Pkhb9+59oUwuni892MNA+vP9cs7y3hQVrwr3FfJwKKfPeh8
nI8LzwosDxcyaNZY7Lvf0Bgh7zQmaeYy6OqPdLbqM4btj99bEzMZDFWMu3ql
C/BmPs8nXc7gyvV912d8WYRqephnkMjg3k2zDMuzi5Fg2zeUF8cgw/KU5L2Z
CWhAdlR5FAOhIVea5b0ErPAJduJwBv659alj/UvQEb+JXR/GYJP9uvTIwKXY
X6KbdU+q0qNcUCWhQjg2HJCu82cg5i1ScgKFmP9QQTp8GAy/e6swyxGi8fPZ
W69cGPgsKEoI+okgVUMZ97sjgwPz7+emmhNIuRtcBu0YpG84+uvCLQQ/W3P6
vloxcO9f5JhQSdDtJCuKNGfwbvL7XcGdBGW+j8NYDAPtmKMRD34QxIaKrOJM
GPT0Wv99dR6F++HkSWwjBoajGc4cCwrB6f+1yg0Y5Ev/WzzJjeJ7vnPqnHkM
Su4EkuggirbqUp8sDgPUzRtMiKXIbNHm82cwuBltPLg0jWLWfePDd6YxuBBd
u4lbQBF/d0WvdAqDzeJ7yhtVFGp3vJdrqjP4ctenaEYjhax5z4Wi7xQ5O1mR
Rm0U7xuTfqz9QhHqt0w+/pjC9z+FG4dHKJ4Wh4nTOyk6GppuJL6neBH48an6
S4o1eMmh/RSusbO0zLspbtWN7X74iuLRq5wMiaq/7KbOozAFxfMdrcf0VVhU
Y0JnPaH4ZsFR7+6gMKhenVj1gOLCdJ4sup0i7brvkEcLRQgnOlmzmUKrav8a
pQr9Q5ztY6spYirkl881UOjJBQ9Giii+lpdoWNVSrPJ6ne95niKo7O7WF5UU
lrLMzKZ4it7S3saoqxR7l3U9E++l8Cj5YaCvmhtvf9NS56fSs5gTfSuXQt4X
sdbLgcK2iLzcnEVhoag5yaUUNy47WE1Kp/C8e8pEnUNxMS9qbHUSxZlSf1aI
yl9u7hn3tyoeZU7TJa0agpMXyyvi/qBo9QiMGUsjCM/qD27dT2GqXBk05ESw
7pzTwPqtFNXfuZ55hUI0n5Hafdqk0nGFbuecKCEs0g7lyjdSzNVJ9XZwFoIn
r/J7uk7lk3O7yW99S/H9hF6ntyonnjHPfS87LUFIglg8bkpx+1VSb/JrE/TH
u5zOFFJoSlJKXSNM8OfRIy69Cyk2WPL+7X5pMfJjhu8HsCnesld1FYwKoBv9
k2CqJsXfJc8XRMULkBy14GjhJIo+iwjz9wYCREa42w4pCexfGKa1eBjjU3hw
9slRAvag+9HEr0aQ7otXIx8Iqu1D9eXpRnix55LPnwME0cmtR5pXGsFVVl8b
+hdBouKzo9koH/fCnnF/6SbIndYlW1DEh03ox72VzwkCLoVGsAL5uBas9cT9
MYG7W7Z+ihkfgl1807F2AmJqe/+Vluq/BC1PPnuP4NT0vLytn3iYuWPjiEUT
weszGnb6gzzEbd/t1FVPoPfaenL1Nx7GpSeLI6sJHHeUJpUb8pHuepUUXiMw
58+YlbSbD3ObhxVPrhBctkrRXqXa75HxqJhVQNA5EtxcV2KEXTM5dcIcFf+2
LcWN14wxbdz8N+/zBJFl1w6en70IBW89m4+dJmjMcVPEfluMVY8i7CuTCKYW
T7E7cWgpeuoy2nriVXd/0951j0w1V4D12n8QbJfIlzTdZsBN6emwOKjKSffz
CeIxM1RGsjYGhBPMFZ6o/CyzgIuU9zIljMDfQFF66JsEH1zsNjcEEbQNKK5U
vVyJ49bb+gcDCGSul9zYF9eCKvzu6Kr+kmACa8q4wAX/BxkqmnE=
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
DYr/knE=
       "]], LineBox[CompressedData["
1:eJwVUHk41QkbvZY20mIp3cu9v9VwU8mnkq1XKZSyjvYYacNX0tVFyhIRMnhU
NOSW6jMqOyOP8layRFlCcZEx+mSXKNMk3/3+eJ/zxznnPec5pMcppyPyHA5H
LLv/49Sy300vPmdRKKc4b1bojOqDaddqkUXr/RWnKuc54lGm1G62mMWivfzf
5CgbLD30Rn7dfRarUo6O2dZbolLqaKmXhMXL5VFb3syY4IE3C05JrrLY2OTq
3iM1whwVlm2LYbFGEOna6mCAHBuQKoeyaNxLaD3P0UOn8P2Jlv4sKpy32CDa
yOCd8rPWYi8W59dvjpnzUIBfviTOPHBj8WxQsdn8YE20WfuwsNeFxfQFCbkJ
wap4w7vmhOZ2FpP0XK64NSqhyYXP3p4WLKo3K3LZE3LYkcA/mWfIopnl9FOT
rImKoExb3+86LErOtBXs3tdcsaJE5GfDY9G9PeY/tqvebyqtyRAlL5b18/Xp
VXw1sWmP9OXZHgUWk79kG1Tf/75pemQqQH+aQTfFJXpFdfKQwiHPBQwzuFNT
nNfUMReM1ezOV/Yw+NL/wlbrJCV4x4pDlrQymLiu9YXBDxUIML4ddqCWQZ5k
xm9t8hJYvuPVxazHDCasvholWqgKJQenIyfzGWzZknXQ0FsNXH3paLjHIEdT
3XxloTpcuxoY9y6ewbmXYyjJvOWwPutOPHORwcqQmyr3l2tCW1lDgq+YwSB3
u/5VmitAo4e9Ot+dwbib5hk/jXGhaMLhuosLg3XkVHFINQ9c5gSnSmwYRMeH
hoJkLUgWNqcbr2VQOWz8bdlCPhiZz2REsAwmt8/pr37EhxZ73duNKxiUSrfp
Wx0UgMjD+Y7WIga/+AX4Jn0VgJr/hXvH5Rmk6k+SkVYEFET9nlX0hcbYt+L6
79EEON1oyeYM0bhk/6nlzrUEJFUIc1Pe0Ci9XtanYUGCYfPP+X3VNIZmN/uW
+pHQ3BdaaFBOY8yG2eB7mST4fb1fHJxHI8eTL5lqJGGp0ts/au7Q+HjpXw2P
vpGQpyVfpp5K4z/6Z27OISlwWLOq3P0KjXvn6/sObqFg3HLPkwdhNPaMFGcH
HKYgweUiTvvTGCJ1764IocDgWM4zKy8a45LSB1+nUNAY2F6ZcIjGEf42flEO
Bb5xitWdTjR+Ddvlcv4pBYsz1tTqWtPYYu6uYtxEQU7+vjqRKY3625sufeqi
YFdl5CtcQ6NV1+6Gkn4KRtvyGhYyNG752NCePEpB/IC0aY+mbI+KA/EpExSs
/j635c5CGgde6Xa8/kzB60WGbeMcGt8b/nhsJeNPkgffmU1RyN8zsn+ezK9i
FN0RPUBhzApDRUb2/8G2ws6WLgrPn46wzJLl2+3t7iaaKbRQmO27Jes37L3g
T58qCiOUKpcKnlMQd8Hor9IyCh8aRNusLqBAP9Htg2IuhSPhwjPdNymoz4zp
d8ikMNIibNziMgU+JcUDadcpvO4ZIXE7TYFybc/Qx1gKFRbLfXLYTUG2VHnU
KJRCxkNhiDalYPvo+vFQEYXNNbqWg1oUxKhdmdQ8SOG8EmHQbx0kDM/2JOo7
USinsyOWeESC/bDRGrCW5aW97hRcI0H9ReeJY2spVElU9mndQUL6Wf33xXMo
/PF3lI1tFgGcw6HBtd9IvO9S3VUTTICHfcuKrjESDwX8Of+kAwE6usEuih0k
ihsi2g2GBJDXXlfrlENiz5E+r1Z/PqhWCY4dzSTRdeOTtmWafPAvOKMYlELi
orsla6Vl2mASy9t0K5zE/ODA3ggFbUgTn+osEpPoZ+q2wT5bC2YPPw+s8SGx
dVTgc8JZCyrNvIvGXEk03lnxtT+HBzp6FY4KdiTaHJk8edeDB5c11MaWWZIo
J9ze7cXjwbDcsTjhehLvDn3o5XdwYddomZ7FShJv2wa9r8rgQl7HompHQsY7
m6fE/ZsLqtUenkc0SNxkOqT8wooLosISuUAlEn0kOzundbjwNkMpI26WwHhh
bv6oBhdM4g6ZSSYJHJ0w1ylV40JaQEF74QCB0S7qk08pLvzwnCuu7iawTPW4
28etXHB33KcufUOgtm3kqsRQLjwzz8kfrSGwpy7+c30bF1ihvL38EwLrJ6vX
he/kQfQy12GNQgL7nKxf3h3kwaB89mW9LAK73YYORRZrgd3YjI55OoE3w1UF
K//QhlypY6VDEoF1qbcz+77J9q+5+4tnlEw/Xs67YE2AqOjvH+JgAs+JXsd2
bSahTbIzLfY0gcezbjzxPkeB8ZVbGzOOEmi1OjruGYeBG4FTbQX7Cfxps/PX
in4WZo7YiqocCEwL9/JrstMFd6f0pR1bCXzUWNwaunslPLP4lDNiQqDrw8Ht
2rAGmJVb7eQMCNRwy7WK1jeES8tTB9RZAv+boG3o++s6+KgwckmXS2Dqp6SP
Z4UmsGMcGLPFBP6zKIzPsQfI6Ux+aq9I4L8WO3JMOVuBSGp6XDUhwDbNX6N4
+nbwoVxhwdweAfYexRoLbWf4Hz+Tcfk=
       "]], LineBox[CompressedData["
1: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
f3e99UwYK3+j8o/xJvwfP6B6/Q==
       "]], LineBox[CompressedData["
1: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
L9pO8C8/w51i
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
AbMack8=
       "]], LineBox[CompressedData["
1:eJwVVHk01YsadVAKT8fvTL/fmSLCNWRKdCJbw0nkqkMquaIoiWO8NymF8ig9
VEKikCFpkBC9LofbSBmiwdB4DamIuoWleOf98a291rfX9+299vrWp709ROKv
qKCgsF9e/8e34YmLP7oy8G6n7MFygRs8siIzz2xhoNHX7v3aS67YHxNXZhXG
wLGWqQa7FDHytqfUtycx0Mlx6WvrA+6sOdsRnMfA8Ivw0INOIrw3vjg4t4aB
AGmcyj62FdSJqqmiVgbW6U4F5W8yR+GqZzUdA/L9g0lRvKUmWLZ3/HfaNAOp
a+hb19J/wZNS0tKUxYRhfpvOlWcLEdi7dNTLmIktkRliUxcdKM7beuXYSiZm
t72JW+aojTMOBwJrPJlYeKuku3fDfJhF5uoPhDGhfDRo/P51Ph4U1/UxjjKh
aH1axE/lwqfrdb5DHhM87s5Pn9tIjKvRtoXcZCLItyDKxo+DlOUL+LktTFj4
iGwtRWzoha3saupn4pM3KV27hoW6C34ZEz+YcHxe7C2OZ8LjWYKbHpMFRYPq
V3f/ZmBkTgnd3YiFaNUreQ/9GUhY9uBx3AoW2KHaZKASA3zp0LFrW1hoH6pQ
OVtDoDJP1fFlKAt6T8I9puMIrOswmqWWxIJksHt7gxeBvlkujTbnWViyKk07
XkzggI300M5qFiIlYo7IjgBjT6pt+mMWnoQM/2ViT+BSbvlkQx8Las5Vka+d
CKxoa6/+PMWCg31xtfI2At2KXyMEDDbinUc7Y6IJhFkxzZ0N2ch21fryaw6B
OQFWI1EObIyWzN2Z/ReBvGyPsuLNbEQsVhLmfCZg83hvQGcIG2YLJ5qL5jPQ
OpO1UDGRjUxv+m2eGwPTfj3nf6tiw85DycyokYGMzB9eyY/Y6Bb7FXT+YMCk
ScCt/ZuNOd7992YvZcLL1CedSXBwr/7HzxOVTNya7EtqlnKg+kHZrvCaPAfj
2eLJBA4EIl/zimEWhrz1lfRzOShLLjtCM2KDvLM7Jr6ZA9GAgsfpAjb+SBkJ
W2pAYtrgVUFsLAcaDfNMd9mTWKUybBx6g4Oir2af0j1ItBvQjVf0cWCrJylt
DCZRkvPBuoMg0bk5YufoERKnDNg2NPlcUHK6jjCHhNa7mpVlASSU6qreON8g
MdVUe/h6Kons0We5+5pIXHZfwPkm71voTHiWvCUhZognNz0l0bSRIp9OkPiT
5TZ0+ysJ3yTRU0U6hedZ/0hU5lGYuLX1pJk+Bad1N615ckwbPuDqvZyCwYZ3
5MtlctQ6p358IwVxWvRbcxcKMkn9w9ogCvaUftu0J4XNCW/+PXiYwtDwZZ9f
/Cl8vklbxTpLoWO0enHmHkp+9+1NN8oppFe23tGSUmBW522Q3KOgQ4XX2AVT
0LMKfTHaQ2HyZWTaiwAKNpX221LHKHxRV8rt8ZH7spw3YKLCxXr1Q4Nmch9e
Fa+CHvG5yA5J4DaupiA1v/o10IIL56m6XVEWFOLKY6LnOnKh5aq/x5Yn1zV1
oV38jYucBl+17zMkiq/yk8QRXNi2lngcf0OixuSTRn8SF1PlzVv7b8vzuvzf
04fPcXG9tmq6P51Er1Eyf0ElF5Z+ZffD5PmPXPK8IHvIxej9k5cDrUkoGBoa
bnvNRfzxlR3lNBKM0snyn/9wsdq1xXnBfQ70DB5a56jy8N0roiE7kQObkqw6
kRYPhR/va31dwYGTXsDqLisezI6sNKdNsuFVZP1orzMPos08rcxSNqS6Km5s
Xx7Wx36cjHdnI/bCs67KP3j4tNGCnjLJQlH+74Nj+TxoFXSL1cxZqNFaLU27
KZ8vkx0fa2Si6Tzz26LHPMxfe9DtpQsTvcK+/Y/f8XA808Qlol3+L3JvKAZN
yPndu3VdXBhQEBw+qqrBh59gR+24jACRI6GX6vBR1HFNfcyIgHX2mGDgVz4G
W145SPvpcKIaCo/48ZG4ab9KsgUdXllpRjrRfARmHiIc3mtAyvGpaEjlY1FP
/o8dkn8hNsN0qU8RH+eqo+yX5KvhJGumfvoWHyXJFdP0J3NRmN4izm3jo3yE
vrj3rQoengx2757iQ49XaMhPVUKvpl1PlKYAClmSNSIdGkbS1Ldz9AUI5024
nJj9016B3vu+ylaAR3v9jVjrx+2J1LIQd4kA6Tp/shI1x+x1NfZ//7JLgE67
MxXr9/TZL/mPU8yJGAHyigNKjzDu2juqc5XNTgkQ+mV5wSLt5/Vbk4eOtVyU
80tOBXr4j9RLVWs1g+sEeJUtarRpnayPPZqUpdYp13tkFmz4WVF2cs7m+ZeG
5HrDz4Nju+bKChP1ix1nBPCa5zkWPEKXVc8eNx5kCjFytevemTyW7EHCvRsJ
hkJUn3mb3G7Jk3UrZ4h0IcRAz9130m9asuHD/g2NG4Vo1oi+0Kq5UKagZOXo
u0eI84NvTlVYGMqIeOXWmVgh1uXcWWvnbSbTpXVuPJchxE/XWVaFhYtlS2Iv
9NpeFiKNULVs3iWSOc6E7+hpEOLB9w3c7cscZJ4HV3zY91wI8ymHF/Xaa2RB
PzXDyGEhNo2bESZ662XHDrj3pXwTwpCmrDJj6Cb7H8ApNro=
       "]], LineBox[CompressedData["
1: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
phL4Pyz7bj4=
       "]], LineBox[CompressedData["
1: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
Lw85SFbgmIOOsiGYGbMUphlHyT8xbCGn
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1:eJwVU3s41HkfnZHk0k2ptLtmecMMXszv+/upKDkkCWON0ap2lBReomlRjWto
C11QrFxScsmlJ7cob9eRLpQtt7wk06ZSMiVal+268/7xec4/n+d8nnPO5xj4
STz9VVgslkQ5/0cXm7BYxXYKAwGy5lV6IjhYm0R2B1F4Op659SHPDa4Ggor1
Egq6Vbya1evWwEvj176uCAqh9NDu/7YBPqOZM72iKJjMT+EWpqxAQG+Dbec+
CvcTiDjEdhkkjU92eh6gkLVNOsvIgIG0nFXQfoiCm9Gu7rZHFOKPGbZ7pFMw
i+f88pDDR0qks0rb7xT47pf1B0vN8S6iJp/Oo6BefCB++lUzeO36zvpEAQWe
TqFukZMpLu/Y3/WxhIL7wQSWwNwE+oEKyeZzFFIz3EelYh4O+q3XullNwXha
7o6I21wM+1w/a3SRwsxx5+mqPlx4bOQ6pFyh4FkevjfsOy4ueqX3K2QUFOcD
L72eMMYPHn9LPe5Q0LTzfDyhMEaiq59O3X0KfTv9rVZNGeO10/2qRe0U5Gln
U8gCLgQOjGt0N4WQq8ahw+Ci1jZ/UN5H4ej8VCE7kgtda7VEh2cU2mKYibAr
XMQxEr2zgxTO++epH1Pj4YVlT4OGgoJNv4b43QYeXMzsvUJHKci61mSIanio
Nq4YaZug0HRvcWD9bBNE68UYZ7MJ+mp6A0a7TDBPSz/TeBHBuTV59tIYM9gN
BkpWOxD4pKjEZXVZoPhZm2bpWgLTW8m5J2wsodlvfVZTQKBK/PbfPGWJ7k6t
/nZvgrw9hdnhfD5WPoyQWvkQ2FS27nHewseZe/3zc/wIfgpRH3p2hI+QxioX
31CCqI6rB398wUfHVd3BpjCCU/O984tnUVjekJDAlRJkb5v8UGVFYVqVqOFd
IsG+k7FWhgkU/lNxVeSZTMAR1DpGFFN4UGI0Un+UIGW2WpOu0vfck5NGsdkE
LtfchmlVAla2b+Of+Uq9212EWfoEARktYscigqEPDqmGKwhaU8lUaRnBoNW0
ikciAupQXoZWJYGjdciiM8EEWQdULSUXCLp8Kyrj9hF8jg+919FAIEx8Vhpw
nMAvptt/6XWC0MQVWUIlb/NeO3Zuk/LuJedty2sJLMLLTn5pJlgqL3TRuUGQ
sVN7+dYHBDcabj2StxBMBUV13uokMPLS6DnWQbDZ//lOXi8Bu+dOMFeJt3zd
NI/ICRbYRA7l9CtzENeXjDwniMgfffv8KUG6N8deNERwTbjPjfUnwbhn0pOL
7whid8yY+0a5z/i9Fqb9RfA1jR4zVPKF/brubuBHgnzTovDr7QQ18RUrwaKx
8K7zVPVdgvdpWrW6ajSsnKoXTl4msDwdwh3VosEK3pN++BzBzso/TrZo05gY
03cJyiE4f81iXuEiGm/crB0O/0agaE1LitKjYcdJTlKEEJg9ef/ZcwmN2Zmu
FsmeBMHDwjAzExqt8pWOG60Iyj7WvppmSaPkAWnatIDglYaOzxOGxtsSbmLS
mLKHi3d31NnQyLy92fBxK4XtvO61R0FDHP6LmkCZ/4BTNlnlRkPQErsg2oWC
wc9/ly70pBExLmrmLabg679Jb8Sbxi49y0N9yn+T7/9BvWAbjbweb3XzcD70
MmJjpUE0zKwV0ktWfIgL5WMeEqU+gf3bFW8s0Ssr6GdH06hT+V/CYWUfdNvY
osfxNNJEDgb37Czw81O/5tqDNKIk0zYsKzZH1xfDC9uO0zB1XflTl/e/0WZT
nny7nMbpqadJaX4mmOOi+TW/isac7bKijjQe3DfuCN9TT0NbkuCRcIGL+3vN
N3MbaajcLvUU9hlBMym189sdGkZFBZ9q+g3hnDXi3NNKo+312zRFxxLcqauh
U3pohEx4/6WXboDpt+aVb5XTGPZrShJ76cOxM5xj80Lph6uve/UMDvYPdGXM
e0MjVEOeNLT0e9wctdIYHqHRoF2RccZCF2z2ibimcRobLtTEab/UAeZOfcj7
RMNkcHNms0AbcT9uDIpgM6hQSdyXUqOJaxaX5W4zGHwVXjwlGmDjs+33Xkaz
GMCscYzfN2JnI4hp+TKPgf77wHW1PY9vRIr7V3XrMmCW/BF5RMqSNexYVVfJ
YZA7FvGq+90c2WTUaZMkQwaFA1fI89WLZUsPsU5vMWVQd0qso9j0L9nunK06
y/kMgorKp09mmcjqym6mzF3K4HKLpCx6PyX7cGnJt9crGMxkZaq6v1omI3d/
i2i0Z8D7vcy+PgqyXd0vh3LWMgiO7T2+fs1aWdVLpy1hAgbXObafxjlCWcu3
zPQKdwambNUZ30xFsn8A6af/mw==
       "]], LineBox[CompressedData["
1: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
LBd//9K5h4Uef2y01vKA/wHlV0IM
       "]], LineBox[CompressedData["
1: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
W3sp/gXmDgMy
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1:eJwdj1tM03ccR+uFrcrFlikELSB3MYPVfylUSsvnJ4pgGhkDpwyMQKI2igGb
kqHiwm1OM2oQ0DWdGHFSI5QpCAq4dF+cghc6mIAgkE0ys4ETJI5LBxTH9nBy
Hs7T8UrP/GT/Uh6PF7rIfy5I9ohN1wEblyx//93GBMqdFl32OwvcHEpxCLGP
p/d2+r0OPgfYatbMv+mJoZKqIJmsHBgrXXhVqoqitTZpEfsGyI7VSAIvRNLV
RGXXDgNweNAqH5sJp2BTtCixAhj8fktz3kAYNS2LU++9DBj81qbVt0hpS/Lu
hgPfAfvu+K6rigmhjvp9vCwj8MRa+7E2XkKfrlSrjl0HDtmnrs68xdGLtCx9
gQlIHvlSWbybo0PNOS+/vgH8reCEhiCOJgX54vP1wD3DKt14IEdfqM/kXmoE
MvxDCyejOOLTuYfXmoClAV85RWRzVOpqWF13FzBO+PQMNnEkyryS2mIGHj6y
S7Kzl5Cxrdr0UysQ5uuc06KWkNjjlrXjPuBgN92l75RQS/bdrc/agXKdwKVB
EUKdvh1DI5bF3w6jsDJQSp/l9mx42wXcVice/KBKSi+7h7Rz3UDet/Zxo96h
ZC0Yc3AaADhN3WybdxitH3ZSSP4A+i3a6EqfzVQtcz0TMQp4/FrWX1q5mUJK
PHu3vQZqxvXuE+7hFBMpPrLn7eLvjDrnuUBOTy/ImtOmAGFrZeBfp+SUMg67
w1ZANdfirJmVU1ZFfMXJBWBT9WSc5/MImp1MGj21hGEqf14/HqWgIlW6tGQ5
g7lXzBXVKEg/p7FcWcnQsCeFr81SknfCCTeTI0PeUdfRYouSTNWF+xsFDO0z
96ZG/COpNanc1u7CcHKTRWSzRJKq7mLsL24MjzM8t7c6gp7xq84PiBiKdeWd
Gg6Umlo7/LvnYmcOMfxdoFd3GoPGvBnKQt21n2eDtKvMx6b9GLwcTXW3y0AL
B9oevNvAMHzJNvHDDdBp88/CFR8yHH9cX5v/COTs0rfX+SOGhb7TI/MvQBeP
/HZ9HccQbTR7BUyD/B/8OeUrZSgULEv8h8/opmiCBcsY1Dk9bzLcGIVrrbow
OUOfIqLvRACj+094A1AyVLLupPUSRjt9VvjvYAzbji6Id0Uw6j8u1CRsZTjY
m5C7JopR+lM3c8p2htwf/zf9C0Wxk1I=
       "]]},
     Annotation[#, "Charting`Private`Tag$26123#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{296.3999999999967, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-34.55751918948772, 34.55751918948772}, {-76.67181563750333, 
   76.45695704259154}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.818452323798956*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"fce339b5-b986-47d2-9bed-01a21b72eb22"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell["Limits", "Section",
 CellChangeTimes->{{3.818228953678043*^9, 
  3.8182289570140433`*^9}},ExpressionUUID->"90abc28a-311e-43cd-ba91-\
a1da08370d9e"],

Cell[CellGroupData[{

Cell["Derivatives", "Section",
 CellChangeTimes->{{3.8182289638480453`*^9, 
  3.8182289650000553`*^9}},ExpressionUUID->"3c1fceb7-a86a-4fec-898e-\
1ff86da67fa9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"3", " ", "-", " ", 
      RowBox[{"14", "x"}]}], ")"}], "2"], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.818229147795143*^9, 3.818229160745152*^9}, {
  3.8182293337828054`*^9, 3.818229366603799*^9}, {3.8182294172132277`*^9, 
  3.8182294270542336`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"86562337-da4c-45a9-b841-64056b9ce536"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "28"}], " ", 
  RowBox[{"(", 
   RowBox[{"3", "-", 
    RowBox[{"14", " ", "x"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.818229152298153*^9, 3.8182291610031595`*^9}, {
   3.818229329742787*^9, 3.818229367073799*^9}, 3.8182294281802273`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"48b5f6ff-5de4-4f75-9827-d9c2a3b73cd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    SuperscriptBox["x", "2"], "]"}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.818229381993802*^9, 3.818229395816648*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"100172c3-6fe0-4117-b000-70e69fcbbad4"],

Cell[BoxData[
 FractionBox["2", "x"]], "Output",
 CellChangeTimes->{{3.818229391865651*^9, 3.818229396209648*^9}},
 CellLabel->"Out[63]=",ExpressionUUID->"d5d8a4dc-1f6b-48b7-8d73-49ceb07e9155"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Understanding functions", "Section",
 CellChangeTimes->{{3.818450278929119*^9, 
  3.8184502839941196`*^9}},ExpressionUUID->"edf53167-6a12-4a02-9643-\
2622bb9fb83c"],

Cell["Let us say we are given the following expression", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.81845029493312*^9, 3.81845031041512*^9}, {
  3.818450374167124*^9, 
  3.8184504335551205`*^9}},ExpressionUUID->"2a11eec3-1f7d-421b-bd38-\
7ceb60732d19"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "f", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", " ", "[", "x_", "]"}], ":=", " ", 
   FractionBox["x", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", "1"}], ")"}], 
     FractionBox["1", "3"]]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.818450442132119*^9, 3.81845045615312*^9}, {
  3.8184511109003363`*^9, 3.818451123712329*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"99810f2f-e9cf-403a-8b80-c19f924d4a01"],

Cell["Plot the function and its domain", "Text",
 CellChangeTimes->{{3.818450749984287*^9, 
  3.818450752361286*^9}},ExpressionUUID->"9c7c9d5c-dd5b-4073-bfe0-\
f7470e8e2523"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FunctionDomain", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}], " ", "//", 
  RowBox[{
   RowBox[{"NumberLinePlot", "[", 
    RowBox[{"#", ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "10"}], ",", " ", "10"}], "}"}]}], "]"}], 
   "&"}]}]}], "Input",
 CellChangeTimes->{{3.8184504644421387`*^9, 3.818450515081212*^9}, {
  3.81845056722719*^9, 3.818450692618265*^9}, {3.8184507229342613`*^9, 
  3.818450755811287*^9}, {3.8184511327393274`*^9, 3.818451138195316*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"dff0bfb1-9cb7-4ed4-96dc-130df2cd94d9"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
wxc49g==
       "]], LineBox[CompressedData["
1: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
Q/8Dy9RHfw==
       "]]},
     Annotation[#, "Charting`Private`Tag$11081#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{257.3333333333329, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-7.69408067184529, 7.663350886458554}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.818450478619119*^9, 3.8184505153272147`*^9}, {
  3.8184505677051744`*^9, 3.818450595127177*^9}, {3.8184506525932474`*^9, 
  3.8184507566653028`*^9}, {3.8184511287773123`*^9, 3.818451138633309*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"00f9f7b5-3e2d-42d9-a795-354a2eacb1a0"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
   AbsoluteThickness[1.6], {{PointBox[{-1., 1}], 
     {Arrowheads[0.04], ArrowBox[{{-1, 1}, Scaled[{-0.08, 0}, {-10., 1}]}]}}, {
     {PointSize[0.013], PointBox[{-1, 1}]}, 
     {GrayLevel[1], PointSize[0.0117], PointBox[{-1, 1}]}}, {
     PointBox[{1., 1}], 
     {Arrowheads[0.04], ArrowBox[{{1, 1}, Scaled[{0.08, 0}, {10., 1}]}]}}, {
     {PointSize[0.013], PointBox[{1, 1}]}, 
     {GrayLevel[1], PointSize[0.0117], PointBox[{1, 1}]}}}},
  AspectRatio->NCache[Rational[1, 10]/GoldenRatio, 0.06180339887498948],
  Axes->{True, False},
  AxesLabel->{None},
  AxesOrigin->{Automatic, Automatic},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  ImagePadding->All,
  ImageSize->{257.3333333333329, Automatic},
  PlotRange->{{-10., 10.}, {0, 1}},
  PlotRangePadding->{{
     Scaled[0.1], 
     Scaled[0.1]}, {0, 1}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.818450478619119*^9, 3.8184505153272147`*^9}, {
  3.8184505677051744`*^9, 3.818450595127177*^9}, {3.8184506525932474`*^9, 
  3.8184507566653028`*^9}, {3.8184511287773123`*^9, 3.818451138689311*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"2704d2a6-f500-4c62-b74c-6a3fbc44b609"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", "x", "]"}], " ", "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "''"}], "[", "x", "]"}], " ", "//", " ", "FullSimplify"}]}], \
"Input",
 CellChangeTimes->{{3.818450551404174*^9, 3.8184505587601748`*^9}, {
  3.8184506777412624`*^9, 3.8184507173712645`*^9}, {3.818450775030304*^9, 
  3.818450841953314*^9}, {3.8184510998063107`*^9, 3.818451099940313*^9}, {
  3.818451146694311*^9, 3.8184511935403605`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"5ed725d5-9390-4134-b44d-fb997e42171f"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "3"}], "+", 
   SuperscriptBox["x", "2"]}], 
  RowBox[{"3", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["x", "2"]}], ")"}], 
    RowBox[{"4", "/", "3"}]]}]]], "Output",
 CellChangeTimes->{{3.8184505520901723`*^9, 3.8184505597581806`*^9}, {
   3.8184506792612643`*^9, 3.8184507177692623`*^9}, {3.818450781289305*^9, 
   3.818450842295309*^9}, 3.81845110030231*^9, {3.8184511540493097`*^9, 
   3.8184511939963617`*^9}},
 CellLabel->"Out[59]=",ExpressionUUID->"24ca0c67-c868-4113-88be-2d55275aceae"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "9"}], "+", 
      SuperscriptBox["x", "2"]}], ")"}]}], 
   RowBox[{"9", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}], 
     RowBox[{"7", "/", "3"}]]}]]}]], "Output",
 CellChangeTimes->{{3.8184505520901723`*^9, 3.8184505597581806`*^9}, {
   3.8184506792612643`*^9, 3.8184507177692623`*^9}, {3.818450781289305*^9, 
   3.818450842295309*^9}, 3.81845110030231*^9, {3.8184511540493097`*^9, 
   3.8184511940333595`*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"3a54e6d2-a5cd-4af8-92f4-e431109ba6a4"]
}, Open  ]],

Cell["\<\
Critical points are points where the derivative is zero or does not exist.\
\>", "Text",
 CellChangeTimes->{{3.8184512218083744`*^9, 
  3.818451246980372*^9}},ExpressionUUID->"9533716d-d065-4735-a78e-\
f14295127cc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "3"}], "+", 
      SuperscriptBox["x", "2"]}], 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["x", "2"]}], ")"}], 
       RowBox[{"4", "/", "3"}]]}]], "\[Equal]", "0"}], ",", " ", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.818450492182124*^9, {3.8184513102804136`*^9, 3.818451313704398*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"ea63b507-e249-400c-b45c-c3138a96bb71"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      SqrtBox["3"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     SqrtBox["3"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8184513140073967`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"c8c22db8-8a2d-4789-8dbc-35c1d5eab306"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", "3"}], "+", 
    SuperscriptBox["x", "2"]}], 
   RowBox[{"3", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}], 
     RowBox[{"4", "/", "3"}]]}]], " ", "//", " ", 
  RowBox[{
   RowBox[{"FunctionDomain", "[", 
    RowBox[{"#", ",", " ", "x"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.8184513506384015`*^9, 3.8184513681854243`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"cde0cb37-e12d-4c50-9a0f-a38ea07ffae9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "<", 
   RowBox[{"-", "1"}]}], "||", 
  RowBox[{"x", ">", "1"}]}]], "Output",
 CellChangeTimes->{{3.8184513561364117`*^9, 3.8184513683854237`*^9}},
 CellLabel->"Out[64]=",ExpressionUUID->"6cc99d64-cf25-4880-83f8-4fc113f9f4d4"]
}, Open  ]]
}, Open  ]],

Cell["Integrals", "Section",
 CellChangeTimes->{{3.8182289691120505`*^9, 
  3.818228970457053*^9}},ExpressionUUID->"ec4b1576-9324-45bf-86eb-\
660c9437d6a6"],

Cell[CellGroupData[{

Cell["Other", "Section",
 CellChangeTimes->{{3.8184533967587476`*^9, 
  3.818453403823741*^9}},ExpressionUUID->"9394ca98-1636-4712-82d3-\
679f4002607b"],

Cell[" Solving functions over a range", "Text",
 CellChangeTimes->{{3.8184534095707464`*^9, 
  3.818453417705741*^9}},ExpressionUUID->"8d846aca-8b3e-492a-bfa4-\
1b2cbc0545fe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], "/", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{"Cos", "[", "x", "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"f", "'"}], "[", "x", "]"}], "\[Equal]", "0"}], "&&", 
     RowBox[{
      RowBox[{"-", "5"}], "\[LessEqual]", "x", "\[LessEqual]", "5"}]}], ",", 
    "x"}], "]"}], " ", "//", " ", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"f", "'"}], "[", "x", "]"}], " ", "\[Equal]", " ", "0"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"-", "5"}], " ", "\[LessEqual]", " ", "x", " ", "\[LessEqual]", 
      " ", "5"}]}], "}"}], "]"}], " ", "//", "AbsoluteTiming"}]}], "Input",
 CellChangeTimes->{{3.818453424460743*^9, 3.8184534919477415`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"8791fd89-142e-427c-b0e5-e8e4460cfd29"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0451677`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"4", " ", "\[Pi]"}], "3"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Pi]"}], "3"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       FractionBox[
        RowBox[{"4", " ", "\[Pi]"}], "3"]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.818453459710744*^9, 3.818453492410744*^9}},
 CellLabel->
  "Out[107]=",ExpressionUUID->"d5061bf1-5067-421c-b33d-c8200fcf2a44"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0427859`", ",", 
   RowBox[{
    RowBox[{"x", "\[Equal]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", "\[Pi]"}], "3"]}]}], "||", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]"}], "3"]}]}], "||", 
    RowBox[{"x", "\[Equal]", 
     FractionBox[
      RowBox[{"2", " ", "\[Pi]"}], "3"]}], "||", 
    RowBox[{"x", "\[Equal]", 
     FractionBox[
      RowBox[{"4", " ", "\[Pi]"}], "3"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.818453459710744*^9, 3.818453492454739*^9}},
 CellLabel->
  "Out[108]=",ExpressionUUID->"0d1855d9-0163-4d4d-9463-9c8a35f67d75"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{748, 872},
WindowMargins->{{Automatic, 229}, {-9, Automatic}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5896b839-8f7e-449e-9a9a-d2bb206036f2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 153, 3, 146, "Title",ExpressionUUID->"d5e863e0-64d0-4539-ad2b-e0dcbd72ac07"],
Cell[739, 27, 399, 10, 153, "Text",ExpressionUUID->"05191c93-ede6-4335-aea6-c3b156fe306b"],
Cell[CellGroupData[{
Cell[1163, 41, 288, 6, 43, "Input",ExpressionUUID->"93eb3686-7f00-4992-b1d5-4e6c6d334311"],
Cell[1454, 49, 218, 5, 49, "Output",ExpressionUUID->"05669361-ff50-49fa-b5b8-bbb4fe4b8f11"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1709, 59, 162, 3, 99, "Section",ExpressionUUID->"894a4507-0f5c-43e9-9771-42672406c4de"],
Cell[CellGroupData[{
Cell[1896, 66, 327, 5, 80, "Subsection",ExpressionUUID->"dc6010f0-77c3-40bd-9219-de27d0716889",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2226, 73, 458, 11, 43, "Input",ExpressionUUID->"33453e2d-6408-4467-8411-2608362a4960",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2687, 86, 6930, 133, 377, "Output",ExpressionUUID->"56bd7616-f038-4538-8986-4101024b625d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9620, 221, 847, 22, 107, "Input",ExpressionUUID->"9827383e-1fdf-445d-ab3c-21660be102db",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10470, 245, 61531, 1119, 363, "Output",ExpressionUUID->"dcb5f598-627f-4964-b1aa-c241ae78087f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[72038, 1369, 176, 3, 54, "Subsection",ExpressionUUID->"1109e405-b07f-4096-8335-2be6be36141d"],
Cell[CellGroupData[{
Cell[72239, 1376, 34483, 676, 99, "WolframAlphaShortInput",ExpressionUUID->"5e7d5201-e1f4-4761-b394-f70434d49923"],
Cell[106725, 2054, 7509, 160, 292, "Output",ExpressionUUID->"e03db980-8050-4a30-9cfa-45e898959515"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114271, 2219, 49593, 989, 97, "WolframAlphaShortInput",ExpressionUUID->"a340a9b0-042d-441f-a99a-07c2a43868ab"],
Cell[163867, 3210, 159, 2, 49, "Output",ExpressionUUID->"3326845e-5c36-4b0c-bae7-ac81c027846e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[164075, 3218, 186, 3, 54, "Subsection",ExpressionUUID->"28782b72-8160-4d5f-9f4d-b780946ebe9a"],
Cell[164264, 3223, 37033, 612, 334, "Input",ExpressionUUID->"165d6773-8d99-4e3f-a545-a6d9c8ce122e"],
Cell[201300, 3837, 218, 5, 86, "Text",ExpressionUUID->"b4a860c8-467a-49d2-8ace-4e2bec47d734"],
Cell[CellGroupData[{
Cell[201543, 3846, 285, 7, 43, "Input",ExpressionUUID->"001b5fad-a633-44dc-85fa-9376760f0989"],
Cell[201831, 3855, 352, 9, 49, "Output",ExpressionUUID->"df0c0583-6d95-4e68-b752-27223ddbf49c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202220, 3869, 514, 15, 73, "Input",ExpressionUUID->"d776f7bc-0017-408a-bb07-828443f71e4a"],
Cell[202737, 3886, 56882, 970, 302, "Output",ExpressionUUID->"fce339b5-b986-47d2-9bed-01a21b72eb22"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[259658, 4861, 153, 3, 99, "Section",ExpressionUUID->"90abc28a-311e-43cd-ba91-a1da08370d9e"],
Cell[CellGroupData[{
Cell[259836, 4868, 160, 3, 76, "Section",ExpressionUUID->"3c1fceb7-a86a-4fec-898e-1ff86da67fa9"],
Cell[CellGroupData[{
Cell[260021, 4875, 440, 10, 48, "Input",ExpressionUUID->"86562337-da4c-45a9-b841-64056b9ce536"],
Cell[260464, 4887, 363, 8, 49, "Output",ExpressionUUID->"48b5f6ff-5de4-4f75-9827-d9c2a3b73cd2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260864, 4900, 284, 6, 48, "Input",ExpressionUUID->"100172c3-6fe0-4117-b000-70e69fcbbad4"],
Cell[261151, 4908, 193, 3, 69, "Output",ExpressionUUID->"d5d8a4dc-1f6b-48b7-8d73-49ceb07e9155"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[261393, 4917, 170, 3, 99, "Section",ExpressionUUID->"edf53167-6a12-4a02-9643-2622bb9fb83c"],
Cell[261566, 4922, 266, 5, 52, "Text",ExpressionUUID->"2a11eec3-1f7d-421b-bd38-7ceb60732d19",
 InitializationCell->True],
Cell[261835, 4929, 518, 13, 121, "Input",ExpressionUUID->"99810f2f-e9cf-403a-8b80-c19f924d4a01"],
Cell[262356, 4944, 174, 3, 52, "Text",ExpressionUUID->"9c7c9d5c-dd5b-4073-bfe0-f7470e8e2523"],
Cell[CellGroupData[{
Cell[262555, 4951, 848, 22, 102, "Input",ExpressionUUID->"dff0bfb1-9cb7-4ed4-96dc-130df2cd94d9"],
Cell[263406, 4975, 9422, 174, 263, "Output",ExpressionUUID->"00f9f7b5-3e2d-42d9-a795-354a2eacb1a0"],
Cell[272831, 5151, 1269, 26, 72, "Output",ExpressionUUID->"2704d2a6-f500-4c62-b74c-6a3fbc44b609"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274137, 5182, 588, 13, 73, InheritFromParent,ExpressionUUID->"5ed725d5-9390-4134-b44d-fb997e42171f"],
Cell[274728, 5197, 617, 16, 86, "Output",ExpressionUUID->"24ca0c67-c868-4113-88be-2d55275aceae"],
Cell[275348, 5215, 710, 19, 89, "Output",ExpressionUUID->"3a54e6d2-a5cd-4af8-92f4-e431109ba6a4"]
}, Open  ]],
Cell[276073, 5237, 226, 5, 86, "Text",ExpressionUUID->"9533716d-d065-4735-a78e-f14295127cc8"],
Cell[CellGroupData[{
Cell[276324, 5246, 586, 18, 87, "Input",ExpressionUUID->"ea63b507-e249-400c-b45c-c3138a96bb71"],
Cell[276913, 5266, 358, 11, 56, "Output",ExpressionUUID->"c8c22db8-8a2d-4789-8dbc-35c1d5eab306"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277308, 5282, 571, 17, 87, "Input",ExpressionUUID->"cde0cb37-e12d-4c50-9a0f-a38ea07ffae9"],
Cell[277882, 5301, 265, 6, 49, "Output",ExpressionUUID->"6cc99d64-cf25-4880-83f8-4fc113f9f4d4"]
}, Open  ]]
}, Open  ]],
Cell[278174, 5311, 156, 3, 99, "Section",ExpressionUUID->"ec4b1576-9324-45bf-86eb-660c9437d6a6"],
Cell[CellGroupData[{
Cell[278355, 5318, 152, 3, 76, "Section",ExpressionUUID->"9394ca98-1636-4712-82d3-679f4002607b"],
Cell[278510, 5323, 175, 3, 52, "Text",ExpressionUUID->"8d846aca-8b3e-492a-bfa4-1b2cbc0545fe"],
Cell[CellGroupData[{
Cell[278710, 5330, 1064, 31, 102, "Input",ExpressionUUID->"8791fd89-142e-427c-b0e5-e8e4460cfd29"],
Cell[279777, 5363, 825, 26, 114, "Output",ExpressionUUID->"d5061bf1-5067-421c-b33d-c8200fcf2a44"],
Cell[280605, 5391, 672, 20, 69, "Output",ExpressionUUID->"0d1855d9-0163-4d4d-9463-9c8a35f67d75"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

